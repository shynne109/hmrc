<?xml version="1.0" encoding="UTF-8"?>
<!--
Schematron
Generated by CoreFiling: generator revision 605498
Tue Sep 17 14:12:43 BST 2024
-->
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="exslt">
  <sch:title>Schematron for FullPaymentSubmission</sch:title>
  <sch:ns prefix="hd" uri="http://www.govtalk.gov.uk/CM/envelope"/>
  <sch:ns prefix="dsig" uri="http://www.w3.org/2000/09/xmldsig#"/>
  <sch:ns prefix="fps" uri="http://www.govtalk.gov.uk/taxation/PAYE/RTI/FullPaymentSubmission/25-26/1"/>
    <sch:pattern id="p2">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:IRheader/fps:Keys/fps:Key">
        <sch:assert test="count(../../../../../hd:GovTalkDetails/hd:Keys/hd:Key[@Type = current()/@Type and . = current()]) &gt; 0" id="a_r1004" diagnostics="errorCode.r1004 transactional.r1004 transactional.en.r1004 ">Keys in the IR header must also exist in the GovTalk header with the same value</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p1">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:IRheader">
        <sch:assert test="count(fps:Keys/fps:Key) &gt; 0" id="a_r1005" diagnostics="errorCode.r1005 transactional.r1005 transactional.en.r1005 ">At least one key must exist in the IRheader</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p4">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:EmpRefs/fps:OfficeNo">
        <sch:assert test="../../../fps:IRheader/fps:Keys/fps:Key[@Type = &apos;TaxOfficeNumber&apos;] = ." id="a_HMRCOFFICENUMBER.0" diagnostics="errorCode.HMRCOFFICENUMBER.0 transactional.HMRCOFFICENUMBER.0 transactional.en.HMRCOFFICENUMBER.0 ">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p5">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:EmpRefs/fps:PayeRef">
        <sch:assert test="../../../fps:IRheader/fps:Keys/fps:Key[@Type = &apos;TaxOfficeReference&apos;] = ." id="a_EMPLOYERPAYEREF.0" diagnostics="errorCode.EMPLOYERPAYEREF.0 transactional.EMPLOYERPAYEREF.0 transactional.en.EMPLOYERPAYEREF.0 ">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p6">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:EmpRefs/fps:SAUTR">
        <sch:assert test="(((11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)) &gt; 9) and (substring(., 1, 1) = (11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)) - 9))
                or
                (substring(., 1, 1) = (11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)))" id="a_UTR.0" diagnostics="errorCode.UTR.0 transactional.UTR.0 transactional.en.UTR.0 ">Must be valid against the UTR algorithm</sch:assert>
        <sch:assert test="not(../fps:COTAXRef)" id="a_SAUTR.0" diagnostics="errorCode.SAUTR.0 transactional.SAUTR.0 transactional.en.SAUTR.0 ">If [SAUTR] is present [COTAXREF] must be absent</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p7">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:EmpRefs/fps:COTAXRef">
        <sch:assert test="(((11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)) &gt; 9) and (substring(., 1, 1) = (11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)) - 9))
                or
                (substring(., 1, 1) = (11 - (((6 * substring(., 2, 1)) + (7 * substring(., 3, 1)) + (8 * substring(., 4, 1)) + (9 * substring(., 5, 1)) + (10 * substring(., 6, 1)) + (5 * substring(., 7, 1)) + (4 * substring(., 8, 1)) + (3 * substring(., 9, 1)) + (2 * substring(., 10, 1))) mod 11)))" id="a_UTR.0.0" diagnostics="errorCode.UTR.0.0 transactional.UTR.0.0 transactional.en.UTR.0.0 ">Must be valid against the UTR algorithm</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p8">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:RelatedTaxYear">
        <sch:assert test="substring(string(2026 - 1), 3, 2) = substring(., 1, 2)
          and
            substring(2026, 3, 2) = substring(., 4, 2)" id="a_RELATEDTAXYEAR.0" diagnostics="errorCode.RELATEDTAXYEAR.0 transactional.RELATEDTAXYEAR.0 transactional.en.RELATEDTAXYEAR.0 ">Must be the appropriate tax year for the schema year. I.E. 25-26 for RTI-2026</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(concat(2000 + number(substring(.,1,2)), &apos;-04-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(../../fps:IRheader/fps:PeriodEnd)) div 86400))
        and
          (round(date:seconds(normalize-space(../../fps:IRheader/fps:PeriodEnd)) div 86400) &lt;= round(date:seconds(normalize-space(concat(2001 + number(substring(.,1,2)), &apos;-04-05&apos;))) div 86400))" id="a_RELATEDTAXYEAR.2" diagnostics="errorCode.RELATEDTAXYEAR.2 transactional.RELATEDTAXYEAR.2 transactional.en.RELATEDTAXYEAR.2 ">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p11">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:EmployeeDetails/fps:Address/fps:ForeignCountry">
        <sch:assert test="(count(../fps:Line)) &gt;= 2" id="a_FOREIGNCOUNTRY.0" diagnostics="errorCode.FOREIGNCOUNTRY.0 transactional.FOREIGNCOUNTRY.0 transactional.en.FOREIGNCOUNTRY.0 ">If [FOREIGNCOUNTRY] is present, at least two [ADDRESSLINE] should be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p12">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:EmployeeDetails/fps:BirthDate">
        <sch:assert test="(round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_BirthDateType.1" diagnostics="errorCode.BirthDateType.1 transactional.BirthDateType.1 transactional.en.BirthDateType.1 ">The Date of Birth must be today or earlier.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(date:add(normalize-space(date:date()),normalize-space(&quot;-P130Y&quot;)))) div 86400) &lt; round(date:seconds(normalize-space((.))) div 86400))" id="a_DATEOFBIRTH.0" diagnostics="errorCode.DATEOFBIRTH.0 transactional.DATEOFBIRTH.0 transactional.en.DATEOFBIRTH.0 ">Must be later than 130 years before today</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p13">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:EmployeeDetails/fps:PartnerDetails">
        <sch:assert test="(fps:Name/fps:Initials or fps:Name/fps:Fore)" id="a_SHPP.0" diagnostics="errorCode.SHPP.0 transactional.SHPP.0 transactional.en.SHPP.0 ">[PARTNERFORENAME] should be present if [PARTNERINITIALS] is absent</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p10">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:EmployeeDetails">
        <sch:assert test="fps:NINO
            or
              count(fps:Address/fps:Line) &gt;= 2" id="a_EMPLOYEE.0" diagnostics="errorCode.EMPLOYEE.0 transactional.EMPLOYEE.0 transactional.en.EMPLOYEE.0 ">At least two [ADDRESSLINE] should be present if not ( [NINO] is present )</sch:assert>
        <sch:assert test="fps:Name/fps:Fore or fps:Name/fps:Initials" id="a_EMPLOYEE.1" diagnostics="errorCode.EMPLOYEE.1 transactional.EMPLOYEE.1 transactional.en.EMPLOYEE.1 ">At least one of [FORENAME] and [INITIALS] must be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p15">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:TaxWkOfApptOfDirector">
        <sch:assert test="../fps:DirectorsNIC" id="a_TAXWKOFAPPTOFDIRECTOR.0" diagnostics="errorCode.TAXWKOFAPPTOFDIRECTOR.0 transactional.TAXWKOFAPPTOFDIRECTOR.0 transactional.en.TAXWKOFAPPTOFDIRECTOR.0 ">If [TAXWKOFAPPTOFDIRECTOR] is present then [DIRECTORSNIC] must be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p16">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Starter/fps:StartDate">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:add(normalize-space(date:date()),normalize-space(&quot;P30D&quot;)))) div 86400))" id="a_STARTDATE.0" diagnostics="errorCode.STARTDATE.0 transactional.STARTDATE.0 transactional.en.STARTDATE.0 ">[STARTDATE] must be no later than current date plus 30 days (i.e. Also any date in the past allowed)</sch:assert>
        <sch:assert test="not((.))
          or
            (count(../../../fps:EmployeeDetails/fps:Address/fps:Line)) &gt;= 2" id="a_STARTDATE.1" diagnostics="errorCode.STARTDATE.1 transactional.STARTDATE.1 transactional.en.STARTDATE.1 ">At least two [ADDRESSLINE]s should be present if [STARTDATE] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p18">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Starter/fps:Seconded/fps:EEACitizen">
        <sch:assert test="../fps:StayLessThan183Days
            or
          ../fps:Stay183DaysOrMore
            or
          ../fps:InOutUK" id="a_EEACOMMONWEALTHCITIZEN.0" diagnostics="errorCode.EEACOMMONWEALTHCITIZEN.0 transactional.EEACOMMONWEALTHCITIZEN.0 transactional.en.EEACOMMONWEALTHCITIZEN.0 ">If [EEACITIZEN] is present the following should be true: [INTENDTOSTAYLESSTHAN183DAYS] is present or [INTENDTOSTAYOVER183DAYS] is present or [INTENDTOWORKBOTHINANDOUTOFUK] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p17">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Starter/fps:Seconded">
        <sch:assert test="fps:Stay183DaysOrMore or fps:StayLessThan183Days or fps:InOutUK or fps:EPM6" id="a_INDIVIDUALSECONDEDTOWORKINUK.0" diagnostics="errorCode.INDIVIDUALSECONDEDTOWORKINUK.0 transactional.INDIVIDUALSECONDEDTOWORKINUK.0 transactional.en.INDIVIDUALSECONDEDTOWORKINUK.0 "> If [INDIVIDUALSECONDEDTOWORKINUK] is present, at least one of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] or [EPM6SCHEME] should be present </sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p19">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:LeavingDate">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:add(normalize-space(date:date()),normalize-space(&apos;P30D&apos;)))) div 86400))" id="a_LEAVINGDATE.2" diagnostics="errorCode.LEAVINGDATE.2 transactional.LEAVINGDATE.2 transactional.en.LEAVINGDATE.2 ">[LEAVINGDATE] must not be later than thirty days after today</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p20">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:PmtAfterLeaving">
        <sch:assert test="../../fps:LeavingDate" id="a_PAYMENTAFTERLEAVINGDATEINDICATOR.0" diagnostics="errorCode.PAYMENTAFTERLEAVINGDATEINDICATOR.0 transactional.PAYMENTAFTERLEAVINGDATEINDICATOR.0 transactional.en.PAYMENTAFTERLEAVINGDATEINDICATOR.0 ">If [PAYMENTAFTERLEAVINGDATEINDICATOR] is present the following should be true: [LEAVINGDATE] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p21">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:Benefits/fps:Car/fps:FirstRegd">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_DATEFIRSTREGISTERED.1" diagnostics="errorCode.DATEFIRSTREGISTERED.1 transactional.DATEFIRSTREGISTERED.1 transactional.en.DATEFIRSTREGISTERED.1 ">[DATEFIRSTREGISTERED] must be today or earlier.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p22">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:Benefits/fps:Car/fps:AvailTo">
        <sch:assert test="(round(date:seconds(normalize-space(../fps:AvailFrom)) div 86400) &lt;= round(date:seconds(normalize-space((.))) div 86400))" id="a_CARAVAILABLETO.0" diagnostics="errorCode.CARAVAILABLETO.0 transactional.CARAVAILABLETO.0 transactional.en.CARAVAILABLETO.0 ">[CARAVAILABLETO] must not be before [CARAVAILABLEFROM]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p23">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:Benefits/fps:Car/fps:FreeFuel/fps:Withdrawn">
        <sch:assert test="(round(date:seconds(normalize-space(../fps:Provided)) div 86400) &lt;= round(date:seconds(normalize-space((.))) div 86400))" id="a_FREEFUELWITHDRAWN.0" diagnostics="errorCode.FREEFUELWITHDRAWN.0 transactional.FREEFUELWITHDRAWN.0 transactional.en.FREEFUELWITHDRAWN.0 ">[FREEFUELWITHDRAWN] must not be before [FREEFUELPROVIDED]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p24">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:TrivialCommutationPayment">
        <sch:assert test="count(../fps:TrivialCommutationPayment/@type[. = current()/@type]) &lt;= 1" id="a_TRIVIALCOMMUTATIONPAYMENT.0" diagnostics="errorCode.TRIVIALCOMMUTATIONPAYMENT.0 transactional.TRIVIALCOMMUTATIONPAYMENT.0 transactional.en.TRIVIALCOMMUTATIONPAYMENT.0 ">[TRIVIALCOMMUTATIONPAYMENTTYPE] should be unique within each [PAYMENT]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p25">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:Payment/fps:FlexibleDrawdown">
        <sch:assert test="fps:TaxablePayment or fps:NontaxablePayment" id="a_FLEXIBLEDRAWDOWN.1" diagnostics="errorCode.FLEXIBLEDRAWDOWN.1 transactional.FLEXIBLEDRAWDOWN.1 transactional.en.FLEXIBLEDRAWDOWN.1 ">If [FLEXIBLEDRAWDOWN] is present the following should be true: [TAXABLEPAYMENT] is present or [NONTAXABLEPAYMENT] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p26">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:NIletter">
        <sch:assert test="not (../../../fps:EmployeeDetails/fps:Gender = &apos;M&apos;)
              or
              not ( (. = &apos;B&apos;) or (. = &apos;E&apos;) or (. = &apos;T&apos;) or (. = &apos;I&apos;))" id="a_NILETTER.0" diagnostics="errorCode.NILETTER.0 transactional.NILETTER.0 transactional.en.NILETTER.0 ">If [GENDER] is 'M', [NILETTER] cannot equal 'B' or 'E' or 'I' or 'T'</sch:assert>
        <sch:assert test="count(../../fps:NIlettersAndValues/fps:NIletter[. = current()]) = 1" id="a_NILETTER.1" diagnostics="errorCode.NILETTER.1 transactional.NILETTER.1 transactional.en.NILETTER.1 ">[NILETTER] must be unique within each occurrence of the [EMPLOYMENT] group</sch:assert>
        <sch:assert test="not((. = &apos;F&apos;) or 
              (. = &apos;I&apos;) or 
              (. = &apos;L&apos;) or 
              (. = &apos;S&apos;) or
              (. = &apos;N&apos;) or 
              (. = &apos;E&apos;) or 
              (. = &apos;D&apos;) or 
              (. = &apos;K&apos;))
              or ../../fps:EmployeeWorkplacePostcode" id="a_NILETTER.2" diagnostics="errorCode.NILETTER.2 transactional.NILETTER.2 transactional.en.NILETTER.2 ">[EMPLOYEEWORKPLACEPOSTCODE] should be present if [NILETTER] eq 'F' or [NILETTER] eq 'I' or [NILETTER] eq 'L' or [NILETTER] eq 'S' or [NILETTER] eq 'N' or [NILETTER] eq 'E' or [NILETTER] eq 'D' or [NILETTER] eq 'K'</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(../../../fps:EmployeeDetails/fps:BirthDate)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;1961-04-05&apos;)) div 86400))
              or
              not((. = &apos;B&apos;) or (. = &apos;E&apos;) or (. = &apos;T&apos;) or (. = &apos;I&apos;))" id="a_NILETTER.3" diagnostics="errorCode.NILETTER.3 transactional.NILETTER.3 transactional.en.NILETTER.3 ">If [DATEOFBIRTH] is after '1961-04-05', [NILETTER] cannot equal 'B' or 'E' or 'I' or 'T'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p27">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:AtLELYTD">
        <sch:assert test="not (../fps:NIletter = &apos;X&apos;)
              or
            . = 0" id="a_AT-LEL.0" diagnostics="errorCode.AT-LEL.0 transactional.AT-LEL.0 transactional.en.AT-LEL.0 ">[Earnings at LEL] must be zero if [NILETTER] is 'X'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p28">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:LELtoPTYTD">
        <sch:assert test="not (../fps:NIletter = &apos;X&apos;)
              or
            . = 0" id="a_LEL-TO-PT.1" diagnostics="errorCode.LEL-TO-PT.1 transactional.LEL-TO-PT.1 transactional.en.LEL-TO-PT.1 ">[Earnings above LEL to PT] must be zero if [NILETTER] is 'X'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p29">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:PTtoUELYTD">
        <sch:assert test="not (../fps:NIletter = &apos;X&apos;)
            or
              . = 0" id="a_PT-TO-UEL.1" diagnostics="errorCode.PT-TO-UEL.1 transactional.PT-TO-UEL.1 transactional.en.PT-TO-UEL.1 ">[Earnings above PT up to UEL] must be zero if [NILETTER] is 'X'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p30">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:TotalEmpNICInPd">
        <sch:assert test="not(../fps:NIletter = &apos;X&apos;) or . = 0" id="a_TOTALEMPLOYERNICONTRIBUTIONS.1" diagnostics="errorCode.TOTALEMPLOYERNICONTRIBUTIONS.1 transactional.TOTALEMPLOYERNICONTRIBUTIONS.1 transactional.en.TOTALEMPLOYERNICONTRIBUTIONS.1 ">This must be 0.00 if [NILETTER] is 'X'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p31">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:TotalEmpNICYTD">
        <sch:assert test="not(../fps:NIletter = &apos;X&apos;) or . = 0" id="a_TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1" diagnostics="errorCode.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1 transactional.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1 transactional.en.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1 ">This must be 0.00 if [NILETTER] is 'X'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p32">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:EmpeeContribnsInPd">
        <sch:assert test="not(../fps:NIletter = &apos;X&apos; or ../fps:NIletter = &apos;C&apos; or ../fps:NIletter = &apos;K&apos; or ../fps:NIletter = &apos;S&apos; or ../fps:NIletter = &apos;W&apos;) or . = 0" id="a_EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1" diagnostics="errorCode.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1 transactional.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1 transactional.en.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1 ">This must be 0.00 if [NILETTER] is 'X', 'C', 'K', 'S' or 'W'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p33">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment/fps:NIlettersAndValues/fps:EmpeeContribnsYTD">
        <sch:assert test="not(../fps:NIletter = &apos;X&apos; or ../fps:NIletter = &apos;C&apos; or ../fps:NIletter = &apos;K&apos; or ../fps:NIletter = &apos;S&apos; or ../fps:NIletter = &apos;W&apos;) or . = 0" id="a_EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1" diagnostics="errorCode.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1 transactional.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1 transactional.en.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1 ">This must be 0.00 if [NILETTER] is 'X', 'C', 'K', 'S' or 'W'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p14">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee/fps:Employment">
        <sch:assert test="not (fps:Starter/fps:StartDate)
                or
                  fps:Starter/fps:StartDec
                or
                  fps:Starter/fps:Seconded/fps:Stay183DaysOrMore
                or
                  fps:Starter/fps:Seconded/fps:StayLessThan183Days
                or
                  fps:Starter/fps:Seconded/fps:InOutUK
                or
                  fps:Starter/fps:OccPension/fps:Amount &gt; 0" id="a_EMPLOYMENT.FPS.0" diagnostics="errorCode.EMPLOYMENT.FPS.0 transactional.EMPLOYMENT.FPS.0 transactional.en.EMPLOYMENT.FPS.0 ">If [STARTDATE] is present, at least one of [STARTINGDECLARATION], [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] must be present or [ANNUALAMOUNTOFPENSION] must be greater than zero</sch:assert>
        <sch:assert test="not (
                    fps:OccPenInd
                  and
                    fps:Starter/fps:OccPension/fps:Amount
                  and
                    fps:Starter/fps:StartDec
                )" id="a_STARTINGDECLARATION.FPS.0" diagnostics="errorCode.STARTINGDECLARATION.FPS.0 transactional.STARTINGDECLARATION.FPS.0 transactional.en.STARTINGDECLARATION.FPS.0 ">[STARTINGDECLARATION] is prohibited if both of [OCCPENIND] and [ANNUALAMOUNTOFPENSION] are present</sch:assert>
        <sch:assert test="not (
                    fps:Starter/fps:Seconded/fps:Stay183DaysOrMore
                  or
                    fps:Starter/fps:Seconded/fps:StayLessThan183Days
                  or
                    fps:Starter/fps:Seconded/fps:InOutUK
                )
                or
                not (
                  fps:Starter/fps:StartDec
                )" id="a_STARTINGDECLARATION.FPS.1" diagnostics="errorCode.STARTINGDECLARATION.FPS.1 transactional.STARTINGDECLARATION.FPS.1 transactional.en.STARTINGDECLARATION.FPS.1 ">[STARTINGDECLARATION] is prohibited if any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] are present.</sch:assert>
        <sch:assert test="(
                    fps:OccPenInd
                  and
                    fps:Starter/fps:OccPension/fps:Amount
                )
                  or
                (
                    fps:Starter/fps:Seconded/fps:Stay183DaysOrMore
                  or
                    fps:Starter/fps:Seconded/fps:StayLessThan183Days
                  or
                    fps:Starter/fps:Seconded/fps:InOutUK
                )
                or not (
                    fps:Starter/fps:StartDate
                )
                or
                    fps:Starter/fps:StartDec" id="a_STARTINGDECLARATION.FPS.2" diagnostics="errorCode.STARTINGDECLARATION.FPS.2 transactional.STARTINGDECLARATION.FPS.2 transactional.en.STARTINGDECLARATION.FPS.2 ">[STARTINGDECLARATION] is mandatory if [STARTDATE] is present, unless any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] are present, or both [OCCPENIND] and [ANNUALAMOUNTOFPENSION] are present.</sch:assert>
        <sch:assert test="not ( fps:Starter/fps:OccPension/fps:Amount )
                or
                  fps:OccPenInd" id="a_EMPLOYMENT.FPS.1" diagnostics="errorCode.EMPLOYMENT.FPS.1 transactional.EMPLOYMENT.FPS.1 transactional.en.EMPLOYMENT.FPS.1 ">If [ANNUALAMOUNTOFPENSION] is present then [OCCPENIND] should be present.</sch:assert>
        <sch:assert test="not ( fps:Starter )
              or
                fps:Starter/fps:StartDate
              or
                fps:Starter/fps:StartDec
              or
                fps:Starter/fps:StudentLoan
              or
                fps:Starter/fps:PostgradLoan
              or
                fps:Starter/fps:Seconded
              or
                fps:Starter/fps:OccPension
              or
                fps:Starter/fps:StatePension" id="a_STARTERINFORMATION.FPS.0" diagnostics="errorCode.STARTERINFORMATION.FPS.0 transactional.STARTERINFORMATION.FPS.0 transactional.en.STARTERINFORMATION.FPS.0 ">If [STARTERINFORMATION] is present then [STARTDATE], [STARTINGDECLARATION], [HASSTUDENTLOAN], [HASPOSTGRADUATELOAN], [INDIVIDUALSECONDEDTOWORKINUK], [PENSIONSTART] or [PENSIONSTART] should be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p9">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:Employee">
        <sch:assert test="not ( fps:EmployeeDetails/fps:PartnerDetails )
              or
                fps:Employment/fps:Payment/fps:ShPPYTD" id="a_PARTNERDETAILS.FPS.0" diagnostics="errorCode.PARTNERDETAILS.FPS.0 transactional.PARTNERDETAILS.FPS.0 transactional.en.PARTNERDETAILS.FPS.0 ">If [PARTNERDETAILS] is present then [SHAREDPARENTALPAY] must be present</sch:assert>
        <sch:assert test="fps:Employment/fps:PaymentToANonIndividual
                or
              fps:EmployeeDetails/fps:BirthDate" id="a_EMPLOYEE.FPS.2" diagnostics="errorCode.EMPLOYEE.FPS.2 transactional.EMPLOYEE.FPS.2 transactional.en.EMPLOYEE.FPS.2 ">[DATEOFBIRTH] is mandatory if [PAYMENTTOANONINDIVIDUAL] is absent.</sch:assert>
        <sch:assert test="not ( fps:EmployeeDetails/fps:Address )
              or
                fps:EmployeeDetails/fps:Address/fps:Line
              or
                fps:EmployeeDetails/fps:Address/fps:UKPostcode" id="a_ADDRESS.FPS.0" diagnostics="errorCode.ADDRESS.FPS.0 transactional.ADDRESS.FPS.0 transactional.en.ADDRESS.FPS.0 ">If [ADDRESS] is present then [ADDRESSLINE] or [POSTCODE] should be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p35">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:FinalSubmission/fps:BecauseSchemeCeased">
        <sch:assert test="../fps:DateSchemeCeased" id="a_FINALSUBMISSIONCEASEDINDICATOR.1" diagnostics="errorCode.FINALSUBMISSIONCEASEDINDICATOR.1 transactional.FINALSUBMISSIONCEASEDINDICATOR.1 transactional.en.FINALSUBMISSIONCEASEDINDICATOR.1 ">[DATESCHEMECEASED] should be present if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p36">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:FinalSubmission/fps:DateSchemeCeased">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_DATESCHEMECEASED.0" diagnostics="errorCode.DATESCHEMECEASED.0 transactional.DATESCHEMECEASED.0 transactional.en.DATESCHEMECEASED.0 ">[DATESCHEMECEASED] must not be in the future</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p34">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission/fps:FinalSubmission">
        <sch:assert test="not ( (.) )
          or
            fps:BecauseSchemeCeased
          or
            fps:DateSchemeCeased
          or
            fps:ForYear" id="a_FINALSUBMISSION.0" diagnostics="errorCode.FINALSUBMISSION.0 transactional.FINALSUBMISSION.0 transactional.en.FINALSUBMISSION.0 ">If [FINALSUBMISSION] is present then [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p3">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/fps:IRenvelope/fps:FullPaymentSubmission">
        <sch:assert test="../../../hd:Header/hd:MessageDetails/hd:Class = &apos;HMRC-PAYE-RTI-FPS&apos;
          or
          ../../../hd:Header/hd:MessageDetails/hd:Class = &apos;HMRC-PAYE-RTI-FPS-TIL&apos;" id="a_FPS.0" diagnostics="errorCode.FPS.0 transactional.FPS.0 transactional.en.FPS.0 ">Valid message classes for a Full Payment Submission are HMRC-PAYE-RTI-FPS and HMRC-PAYE-RTI-FPS-TIL.</sch:assert>
        <sch:assert test="fps:Employee
            or
          fps:CompressedPart
            or
          fps:FinalSubmission" id="a_FPS.1" diagnostics="errorCode.FPS.1 transactional.FPS.1 transactional.en.FPS.1 ">At least one of [EMPLOYEE], [COMPRESSEDPART] or [FINALSUBMISSION] must be submitted</sch:assert>
      </sch:rule>
    </sch:pattern>
  <sch:diagnostics>
    <sch:diagnostic id="errorCode.r1005">5004</sch:diagnostic>
    <sch:diagnostic id="transactional.r1005">At least one key must exist in the IRheader</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.r1005">At least one key must exist in the IRheader</sch:diagnostic>
    <sch:diagnostic id="errorCode.r1004">5005</sch:diagnostic>
    <sch:diagnostic id="transactional.r1004">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.r1004">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic id="errorCode.FPS.0">7837</sch:diagnostic>
    <sch:diagnostic id="transactional.FPS.0">Valid message classes for a Full Payment Submission are HMRC-PAYE-RTI-FPS and HMRC-PAYE-RTI-FPS-TIL.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FPS.0">Valid message classes for a Full Payment Submission are HMRC-PAYE-RTI-FPS and HMRC-PAYE-RTI-FPS-TIL.</sch:diagnostic>
    <sch:diagnostic id="errorCode.FPS.1">7877</sch:diagnostic>
    <sch:diagnostic id="transactional.FPS.1">At least one of [EMPLOYEE], [COMPRESSEDPART] or [FINALSUBMISSION] must be submitted</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FPS.1">At least one of [EMPLOYEE], [COMPRESSEDPART] or [FINALSUBMISSION] must be submitted</sch:diagnostic>
    <sch:diagnostic id="errorCode.HMRCOFFICENUMBER.0">7821</sch:diagnostic>
    <sch:diagnostic id="transactional.HMRCOFFICENUMBER.0">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.HMRCOFFICENUMBER.0">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYERPAYEREF.0">7822</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYERPAYEREF.0">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYERPAYEREF.0">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:diagnostic>
    <sch:diagnostic id="errorCode.UTR.0">7882</sch:diagnostic>
    <sch:diagnostic id="transactional.UTR.0">The entry must be a valid UTR. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.UTR.0">The entry must be a valid UTR. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SAUTR.0">7952</sch:diagnostic>
    <sch:diagnostic id="transactional.SAUTR.0">If [SAUTR] is present [COTAXREF] must be absent</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SAUTR.0">If [SAUTR] is present [COTAXREF] must be absent</sch:diagnostic>
    <sch:diagnostic id="errorCode.UTR.0.0">7882</sch:diagnostic>
    <sch:diagnostic id="transactional.UTR.0.0">The entry must be a valid UTR. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.UTR.0.0">The entry must be a valid UTR. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.RELATEDTAXYEAR.0">7889</sch:diagnostic>
    <sch:diagnostic id="transactional.RELATEDTAXYEAR.0">The Related tax year entered is invalid. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.RELATEDTAXYEAR.0">The Related tax year entered is invalid. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.RELATEDTAXYEAR.2">7844</sch:diagnostic>
    <sch:diagnostic id="transactional.RELATEDTAXYEAR.2">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.RELATEDTAXYEAR.2">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:diagnostic>
    <sch:diagnostic id="errorCode.PARTNERDETAILS.FPS.0">7845</sch:diagnostic>
    <sch:diagnostic id="transactional.PARTNERDETAILS.FPS.0">There is an entry in [PARTNERDETAILS]. This is only relevant if [SHAREDPARENTALPAY] is included in the submission. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PARTNERDETAILS.FPS.0">There is an entry in [PARTNERDETAILS]. This is only relevant if [SHAREDPARENTALPAY] is included in the submission. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYEE.FPS.2">7907</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYEE.FPS.2">There must be an entry in [DATEOFBIRTH] if there is no entry in [PAYMENTTOANONINDIVIDUAL]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYEE.FPS.2">There must be an entry in [DATEOFBIRTH] if there is no entry in [PAYMENTTOANONINDIVIDUAL]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.ADDRESS.FPS.0">7932</sch:diagnostic>
    <sch:diagnostic id="transactional.ADDRESS.FPS.0">If [ADDRESS] is present then an entry in [ADDRESSLINE] or [POSTCODE] must be present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ADDRESS.FPS.0">If [ADDRESS] is present then an entry in [ADDRESSLINE] or [POSTCODE] must be present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYEE.0">7823</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYEE.0">There is no entry in [NINO]. Please complete at least two [ADDRESSLINE] </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYEE.0">There is no entry in [NINO]. Please complete at least two [ADDRESSLINE] </sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYEE.1">7824</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYEE.1">There must be an entry in either [FORENAME] or [INITIALS]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYEE.1">There must be an entry in either [FORENAME] or [INITIALS]</sch:diagnostic>
    <sch:diagnostic id="errorCode.FOREIGNCOUNTRY.0">7825</sch:diagnostic>
    <sch:diagnostic id="transactional.FOREIGNCOUNTRY.0">There is an entry in [FOREIGNCOUNTRY]. Please complete at least two [ADDRESSLINE] </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FOREIGNCOUNTRY.0">There is an entry in [FOREIGNCOUNTRY]. Please complete at least two [ADDRESSLINE] </sch:diagnostic>
    <sch:diagnostic id="errorCode.BirthDateType.1">5001</sch:diagnostic>
    <sch:diagnostic id="transactional.BirthDateType.1">The Date must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.BirthDateType.1">The Date must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.DATEOFBIRTH.0">7826</sch:diagnostic>
    <sch:diagnostic id="transactional.DATEOFBIRTH.0">[DATEOFBIRTH] must be later than 130 years before today's date. Please check </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DATEOFBIRTH.0">[DATEOFBIRTH] must be later than 130 years before today's date. Please check </sch:diagnostic>
    <sch:diagnostic id="errorCode.SHPP.0">7846</sch:diagnostic>
    <sch:diagnostic id="transactional.SHPP.0">There must be an entry in [PARTNERFORENAME] or [PARTNERINITIALS] if [PARTNERDETAILS] is submitted. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SHPP.0">There must be an entry in [PARTNERFORENAME] or [PARTNERINITIALS] if [PARTNERDETAILS] is submitted. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYMENT.FPS.0">7878</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYMENT.FPS.0">If [STARTDATE] is completed, at least one of [STARTINGDECLARATION], [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] must be present or [ANNUALAMOUNTOFPENSION] must be greater than zero. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYMENT.FPS.0">If [STARTDATE] is completed, at least one of [STARTINGDECLARATION], [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] must be present or [ANNUALAMOUNTOFPENSION] must be greater than zero. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTINGDECLARATION.FPS.0">7879</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTINGDECLARATION.FPS.0">You cannot complete [STARTINGDECLARATION] if both of [OCCPENIND] and [ANNUALAMOUNTOFPENSION] are present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTINGDECLARATION.FPS.0">You cannot complete [STARTINGDECLARATION] if both of [OCCPENIND] and [ANNUALAMOUNTOFPENSION] are present</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTINGDECLARATION.FPS.1">7880</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTINGDECLARATION.FPS.1">You cannot complete [STARTINGDECLARATION] if any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] are present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTINGDECLARATION.FPS.1">You cannot complete [STARTINGDECLARATION] if any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] are present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTINGDECLARATION.FPS.2">7881</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTINGDECLARATION.FPS.2">You must complete [STARTINGDECLARATION] if [STARTDATE] is present, unless there is an entry in any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK], or both [OCCPENIND] and [ANNUALAMOUNTOFPENSION]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTINGDECLARATION.FPS.2">You must complete [STARTINGDECLARATION] if [STARTDATE] is present, unless there is an entry in any of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK], or both [OCCPENIND] and [ANNUALAMOUNTOFPENSION]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYMENT.FPS.1">7916</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYMENT.FPS.1">If there is an entry in [ANNUALAMOUNTOFPENSION], then [OCCPENIND] must be completed. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYMENT.FPS.1">If there is an entry in [ANNUALAMOUNTOFPENSION], then [OCCPENIND] must be completed. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTERINFORMATION.FPS.0">7934</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTERINFORMATION.FPS.0">If [STARTERINFORMATION] is present then an entry in [STARTDATE], [STARTINGDECLARATION], [HASSTUDENTLOAN], [HASPOSTGRADUATELOAN], [INDIVIDUALSECONDEDTOWORKINUK], [PENSIONSTART] or [PENSIONSTART] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTERINFORMATION.FPS.0">If [STARTERINFORMATION] is present then an entry in [STARTDATE], [STARTINGDECLARATION], [HASSTUDENTLOAN], [HASPOSTGRADUATELOAN], [INDIVIDUALSECONDEDTOWORKINUK], [PENSIONSTART] or [PENSIONSTART] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXWKOFAPPTOFDIRECTOR.0">7883</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXWKOFAPPTOFDIRECTOR.0">If [TAXWKOFAPPTOFDIRECTOR] is entered then [DIRECTORSNIC] must be completed. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXWKOFAPPTOFDIRECTOR.0">If [TAXWKOFAPPTOFDIRECTOR] is entered then [DIRECTORSNIC] must be completed. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTDATE.0">7828</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTDATE.0">The [STARTDATE] must be a date in the past or any date from today to 30 days in the future. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTDATE.0">The [STARTDATE] must be a date in the past or any date from today to 30 days in the future. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.STARTDATE.1">7829</sch:diagnostic>
    <sch:diagnostic id="transactional.STARTDATE.1">There is an entry in [STARTDATE]. Please complete at least two [ADDRESSLINE]s</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STARTDATE.1">There is an entry in [STARTDATE]. Please complete at least two [ADDRESSLINE]s</sch:diagnostic>
    <sch:diagnostic id="errorCode.INDIVIDUALSECONDEDTOWORKINUK.0">7931</sch:diagnostic>
    <sch:diagnostic id="transactional.INDIVIDUALSECONDEDTOWORKINUK.0"> If [INDIVIDUALSECONDEDTOWORKINUK] is present, at least one of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] or [EPM6SCHEME] must be present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INDIVIDUALSECONDEDTOWORKINUK.0"> If [INDIVIDUALSECONDEDTOWORKINUK] is present, at least one of [INTENDTOSTAYOVER183DAYS], [INTENDTOSTAYLESSTHAN183DAYS], [INTENDTOWORKBOTHINANDOUTOFUK] or [EPM6SCHEME] must be present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EEACOMMONWEALTHCITIZEN.0">7884</sch:diagnostic>
    <sch:diagnostic id="transactional.EEACOMMONWEALTHCITIZEN.0">If [EEACITIZEN] is selected you must also select one of [INTENDTOSTAYLESSTHAN183DAYS],[INTENDTOSTAYOVER183DAYS] or [INTENDTOWORKBOTHINANDOUTOFUK]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EEACOMMONWEALTHCITIZEN.0">If [EEACITIZEN] is selected you must also select one of [INTENDTOSTAYLESSTHAN183DAYS],[INTENDTOSTAYOVER183DAYS] or [INTENDTOWORKBOTHINANDOUTOFUK]</sch:diagnostic>
    <sch:diagnostic id="errorCode.LEAVINGDATE.2">7831</sch:diagnostic>
    <sch:diagnostic id="transactional.LEAVINGDATE.2">The [LEAVINGDATE] cannot be a future date more than thirty days from today. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LEAVINGDATE.2">The [LEAVINGDATE] cannot be a future date more than thirty days from today. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.PAYMENTAFTERLEAVINGDATEINDICATOR.0">7847</sch:diagnostic>
    <sch:diagnostic id="transactional.PAYMENTAFTERLEAVINGDATEINDICATOR.0">The [PAYMENTAFTERLEAVINGDATEINDICATOR] is set. Please complete [LEAVINGDATE] </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PAYMENTAFTERLEAVINGDATEINDICATOR.0">The [PAYMENTAFTERLEAVINGDATEINDICATOR] is set. Please complete [LEAVINGDATE] </sch:diagnostic>
    <sch:diagnostic id="errorCode.DATEFIRSTREGISTERED.1">7939</sch:diagnostic>
    <sch:diagnostic id="transactional.DATEFIRSTREGISTERED.1">[DATEFIRSTREGISTERED] must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DATEFIRSTREGISTERED.1">[DATEFIRSTREGISTERED] must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.CARAVAILABLETO.0">7937</sch:diagnostic>
    <sch:diagnostic id="transactional.CARAVAILABLETO.0">[CARAVAILABLETO] must not be before [CARAVAILABLEFROM]. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CARAVAILABLETO.0">[CARAVAILABLETO] must not be before [CARAVAILABLEFROM]. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.FREEFUELWITHDRAWN.0">7938</sch:diagnostic>
    <sch:diagnostic id="transactional.FREEFUELWITHDRAWN.0">[FREEFUELWITHDRAWN] must not be before [FREEFUELPROVIDED]. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FREEFUELWITHDRAWN.0">[FREEFUELWITHDRAWN] must not be before [FREEFUELPROVIDED]. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.TRIVIALCOMMUTATIONPAYMENT.0">7885</sch:diagnostic>
    <sch:diagnostic id="transactional.TRIVIALCOMMUTATIONPAYMENT.0">[TRIVIALCOMMUTATIONPAYMENTTYPE] should be unique. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TRIVIALCOMMUTATIONPAYMENT.0">[TRIVIALCOMMUTATIONPAYMENTTYPE] should be unique. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.FLEXIBLEDRAWDOWN.1">7936</sch:diagnostic>
    <sch:diagnostic id="transactional.FLEXIBLEDRAWDOWN.1">If [FLEXIBLEDRAWDOWN] is present, there must be an entry in at least one of [TAXABLEPAYMENT] or [NONTAXABLEPAYMENT]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FLEXIBLEDRAWDOWN.1">If [FLEXIBLEDRAWDOWN] is present, there must be an entry in at least one of [TAXABLEPAYMENT] or [NONTAXABLEPAYMENT]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.NILETTER.0">7849</sch:diagnostic>
    <sch:diagnostic id="transactional.NILETTER.0">The NI Letter cannot be B or E or I or T if [GENDER] is shown as male. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NILETTER.0">The NI Letter cannot be B or E or I or T if [GENDER] is shown as male. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.NILETTER.1">7850</sch:diagnostic>
    <sch:diagnostic id="transactional.NILETTER.1">The [NILETTER] must be unique within each occurrence of the [EMPLOYMENT] group. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NILETTER.1">The [NILETTER] must be unique within each occurrence of the [EMPLOYMENT] group. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.NILETTER.2">7954</sch:diagnostic>
    <sch:diagnostic id="transactional.NILETTER.2">If the [NILETTER] is 'F', 'I', 'L', 'S', 'N', 'E', 'D' or K', then [EMPLOYEEWORKPLACEPOSTCODE] must be present. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NILETTER.2">If the [NILETTER] is 'F', 'I', 'L', 'S', 'N', 'E', 'D' or K', then [EMPLOYEEWORKPLACEPOSTCODE] must be present. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.NILETTER.3">7955</sch:diagnostic>
    <sch:diagnostic id="transactional.NILETTER.3">The NI Letter cannot be B or E or I or T if [DATEOFBIRTH] is after 5 April 1961. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NILETTER.3">The NI Letter cannot be B or E or I or T if [DATEOFBIRTH] is after 5 April 1961. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.AT-LEL.0">7852</sch:diagnostic>
    <sch:diagnostic id="transactional.AT-LEL.0">The amount in [Earnings at LEL] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.AT-LEL.0">The amount in [Earnings at LEL] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.LEL-TO-PT.1">7853</sch:diagnostic>
    <sch:diagnostic id="transactional.LEL-TO-PT.1">The amount in [Earnings above LEL to PT] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LEL-TO-PT.1">The amount in [Earnings above LEL to PT] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.PT-TO-UEL.1">7854</sch:diagnostic>
    <sch:diagnostic id="transactional.PT-TO-UEL.1">The amount in [Earnings above PT up to UEL] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PT-TO-UEL.1">The amount in [Earnings above PT up to UEL] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.TOTALEMPLOYERNICONTRIBUTIONS.1">7863</sch:diagnostic>
    <sch:diagnostic id="transactional.TOTALEMPLOYERNICONTRIBUTIONS.1">The amount in [TOTALEMPLOYERNICONTRIBUTIONS] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TOTALEMPLOYERNICONTRIBUTIONS.1">The amount in [TOTALEMPLOYERNICONTRIBUTIONS] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1">7864</sch:diagnostic>
    <sch:diagnostic id="transactional.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1">The amount in [TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE.1">The amount in [TOTALEMPLOYERNICONTRIBUTIONSYEARTODATE] must be 0.00 if the [NILETTER] is 'X'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1">7865</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1">The amount in [EMPLOYEESCONTRIBUTIONSONALLEARNINGS] must be 0.00 if the [NILETTER] is 'X', 'C', 'K', 'S' or 'W'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYEESCONTRIBUTIONSONALLEARNINGS.1">The amount in [EMPLOYEESCONTRIBUTIONSONALLEARNINGS] must be 0.00 if the [NILETTER] is 'X', 'C', 'K', 'S' or 'W'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1">7866</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1">The amount in [EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE] must be 0.00 if the [NILETTER] is 'X', 'C', 'K', 'S' or 'W'. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE.1">The amount in [EMPLOYEESCONTRIBUTIONSONALLEARNINGSYEARTODATE] must be 0.00 if the [NILETTER] is 'X', 'C', 'K', 'S' or 'W'. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.FINALSUBMISSION.0">7933</sch:diagnostic>
    <sch:diagnostic id="transactional.FINALSUBMISSION.0">If [FINALSUBMISSION] is present then an entry in [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FINALSUBMISSION.0">If [FINALSUBMISSION] is present then an entry in [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.FINALSUBMISSIONCEASEDINDICATOR.1">7875</sch:diagnostic>
    <sch:diagnostic id="transactional.FINALSUBMISSIONCEASEDINDICATOR.1">[DATESCHEMECEASED] must be completed if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FINALSUBMISSIONCEASEDINDICATOR.1">[DATESCHEMECEASED] must be completed if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.DATESCHEMECEASED.0">7876</sch:diagnostic>
    <sch:diagnostic id="transactional.DATESCHEMECEASED.0">The [DATESCHEMECEASED] must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DATESCHEMECEASED.0">The [DATESCHEMECEASED] must be today or earlier. Please check</sch:diagnostic>
  </sch:diagnostics>
</sch:schema>
