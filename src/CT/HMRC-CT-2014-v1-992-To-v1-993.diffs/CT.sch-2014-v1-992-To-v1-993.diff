@@
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600N'>
       <sch:assert id='a_N119.0' diagnostics='errorCode.N119.0 transactional.N119.0 transactional.en.N119.0 ' test="not(.='yes') or ../../../ct:ResidentialPropertyDeveloperTax">If [144] is yes, [N120] must be present</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600P'>
+      <sch:assert id='a_N121.0' diagnostics='errorCode.N121.0 transactional.N121.0 transactional.en.N121.0 ' test="not(.='yes') or ../../../ct:CreativeIndustries">If [96] is yes, [N123] must be present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:Trading/ct:LossesBroughtForward'>
       <sch:assert id='a_F002.1' diagnostics='errorCode.F002.1 transactional.F002.1 transactional.en.F002.1 transactional.cy.F002.1 ' test='. &lt;= sum(../ct:Profits)'>[160] should not exceed [155]</sch:assert>
       <sch:assert id='a_F002.0' diagnostics='errorCode.F002.0 transactional.F002.0 transactional.en.F002.0 transactional.cy.F002.0 ' test='sum(../ct:Profits) &gt; 0'>[155] should be greater than 0 if [160] is present</sch:assert>
     </sch:rule>
   </sch:pattern>
@@
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate'>
       <sch:assert id='a_F213.0' diagnostics='errorCode.F213.0 transactional.F213.0 transactional.en.F213.0 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 1)'>[329] should not be present if [4] equals 1</sch:assert>
       <sch:assert id='a_F213.1' diagnostics='errorCode.F213.1 transactional.F213.1 transactional.en.F213.1 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 2)'>[329] should not be present if [4] equals 2</sch:assert>
       <sch:assert id='a_F213.2' diagnostics='errorCode.F213.2 transactional.F213.2 transactional.en.F213.2 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 3)'>[329] should not be present if [4] equals 3</sch:assert>
       <sch:assert id='a_F213.3' diagnostics='errorCode.F213.3 transactional.F213.3 transactional.en.F213.3 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 9)'>[329] should not be present if [4] equals 9</sch:assert>
+      <sch:assert id='a_F213.4' diagnostics='errorCode.F213.4 transactional.F213.4 transactional.en.F213.4 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 10)'>[329] should not be present if [4] equals 10</sch:assert>
+      <sch:assert id='a_F213.5' diagnostics='errorCode.F213.5 transactional.F213.5 transactional.en.F213.5 ' test='not(../../../../ct:CompanyInformation/ct:CompanyType = 11)'>[329] should not be present if [4] equals 11</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:AssociatedCompanies'>
       <sch:assert id='a_N049.0' diagnostics='errorCode.N049.0 transactional.N049.0 transactional.en.N049.0 ' test='ct:ThisPeriod or ct:AssociatedCompaniesFinancialYears'>If [N049] is present the following should be true: [326] is present or [N054] is present</sch:assert>
@@
       <sch:assert id='a_F034.5' diagnostics='errorCode.F034.5 transactional.F034.5 transactional.en.F034.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)       or                       ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [4] equals '5' then [340] should equal an applicable value from [FULL RATE OF CT], [SMALL CO RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT]</sch:assert>
       <sch:assert id='a_F034.4' diagnostics='errorCode.F034.4 transactional.F034.4 transactional.en.F034.4 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 0)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)                     or        ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))        or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or        (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))                     or                       ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '0' then [340] should equal an applicable value from [FULL RATE OF CT], [SMALL CO RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT], [RF SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F034.3' diagnostics='errorCode.F034.3 transactional.F034.3 transactional.en.F034.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4) or         ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001)) or         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or         ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '4' then [340] should equal [FULL RATE OF CT] or [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F034.1' diagnostics='errorCode.F034.1 transactional.F034.1 transactional.en.F034.1 transactional.cy.F034.1 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [4] equals '1' then [340] should equal [EQUIV. LOW CT RATE]</sch:assert>
       <sch:assert id='a_F034.2' diagnostics='errorCode.F034.2 transactional.F034.2 transactional.en.F034.2 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)">If [4] equals '2' then [340] should equal [FULL RATE OF CT]</sch:assert>
-      <sch:assert id='a_F034.6' diagnostics='errorCode.F034.6 transactional.F034.6 transactional.en.F034.6 ' test="not((../../../../../ct:CompanyInformation/ct:CompanyType = 3) or (../../../../../ct:CompanyInformation/ct:CompanyType = 9)) or                         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or                        ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '3' or '9' then [340] should equal an applicable value from [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
+      <sch:assert id='a_F034.6' diagnostics='errorCode.F034.6 transactional.F034.6 transactional.en.F034.6 ' test="not((../../../../../ct:CompanyInformation/ct:CompanyType = 3) or (../../../../../ct:CompanyInformation/ct:CompanyType = 9) or (../../../../../ct:CompanyInformation/ct:CompanyType = 10) or (../../../../../ct:CompanyInformation/ct:CompanyType = 11)) or                         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or                        ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '3' or '9' or '10' or '11' then [340] should equal an applicable value from [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F034.7' diagnostics='errorCode.F034.7 transactional.F034.7 transactional.en.F034.7 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)       or         ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))                     or                       ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '6', '7' or '8' then [340] should equal [FULL RATE OF CT] or [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F034.8' diagnostics='errorCode.F034.8 transactional.F034.8 transactional.en.F034.8 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 3 or ../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9 or ../../../../../ct:CompanyInformation/ct:CompanyType = 0)                       or                         ../../../../../ct:TaxReconciliation/ct:NIcorporationTaxIncluded                       or                         not((round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)))                       or                         not((math:abs((.) - (19)) &lt; 0.001))                       or                         (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)                       or                         (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)                       or                         ( (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                       or                         ( (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [4] equals '3', '4', '6', '7', '8', '9', or '0' and [CT RATE FOR NI TRADING PROFITS] is different to all other CT rates and [CT RATE FOR NI TRADING PROFITS] appears in [340] then [586] must be completed.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
       <sch:assert id='a_F041.5' diagnostics='errorCode.F041.5 transactional.F041.5 transactional.en.F041.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)       or                       ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [4] equals '5' then [390] should equal an applicable value from [FULL RATE OF CT], [SMALL CO RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT]</sch:assert>
       <sch:assert id='a_F041.4' diagnostics='errorCode.F041.4 transactional.F041.4 transactional.en.F041.4 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 0)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)                     or                             ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))                             or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                             (((../../../../ct:RingFenceProfitsIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../../ct:TaxReconciliation/ct:RingFenceSupplementaryChargeIncluded or ../../../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:SupplementaryCharge)) and (../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))                     or                       ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '0' then [390] should equal an applicable value from [FULL RATE OF CT], [SMALL CO RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT], [RF SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F041.3' diagnostics='errorCode.F041.3 transactional.F041.3 transactional.en.F041.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4) or                       ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001)) or         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or         ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '4' then [390] should equal [FULL RATE OF CT], [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F041.1' diagnostics='errorCode.F041.1 transactional.F041.1 transactional.en.F041.1 transactional.cy.F041.1 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [4] equals '1' then [390] should equal [EQUIV. LOW CT RATE]</sch:assert>
       <sch:assert id='a_F041.2' diagnostics='errorCode.F041.2 transactional.F041.2 transactional.en.F041.2 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)">If [4] equals '2' then [390] should equal [FULL RATE OF CT]</sch:assert>
-      <sch:assert id='a_F041.6' diagnostics='errorCode.F041.6 transactional.F041.6 transactional.en.F041.6 ' test="not((../../../../../ct:CompanyInformation/ct:CompanyType = 3) or (../../../../../ct:CompanyInformation/ct:CompanyType = 9)) or                        (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or                        ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '3' or '9' then [340] should equal an applicable value from [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
+      <sch:assert id='a_F041.6' diagnostics='errorCode.F041.6 transactional.F041.6 transactional.en.F041.6 ' test="not((../../../../../ct:CompanyInformation/ct:CompanyType = 3) or (../../../../../ct:CompanyInformation/ct:CompanyType = 9) or (../../../../../ct:CompanyInformation/ct:CompanyType = 10) or (../../../../../ct:CompanyInformation/ct:CompanyType = 11)) or                        (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001) or                        ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '3' or '9' or '10' or '11' then [340] should equal an applicable value from [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F041.7' diagnostics='errorCode.F041.7 transactional.F041.7 transactional.en.F041.7 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8)                     or         (math:abs((.) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)       or                       ((../../../ct:AssociatedCompanies/ct:StartingOrSmallCompaniesRate) and (round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)) and (math:abs((.) - (19)) &lt; 0.001))                     or                       ((../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NItradingActivity and (not(../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SME) or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:NIemployer or ../../../../../ct:CompanyInformation/ct:NorthernIreland/ct:SpecialCircumstances) and (round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) and (math:abs((.) - (19)) &lt; 0.001))">If [4] equals '6', '7' or '8' then [390] should equal [FULL RATE OF CT] or [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS]</sch:assert>
       <sch:assert id='a_F041.8' diagnostics='errorCode.F041.8 transactional.F041.8 transactional.en.F041.8 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 3 or ../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9 or ../../../../../ct:CompanyInformation/ct:CompanyType = 0)                       or                         ../../../../../ct:TaxReconciliation/ct:NIcorporationTaxIncluded                       or                         not((round(date:seconds(normalize-space('2050-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400)))                       or                         not((math:abs((.) - (19)) &lt; 0.001))                       or                         (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     20)) &lt; 0.001)                       or                         (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     25)) &lt; 0.001)                       or                         ( (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     30)) &lt; 0.001))                       or                         ( (math:abs((19) - (number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(normalize-space(../../ct:Year), '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [4] equals '3', '4', '6', '7', '8', '9', or '0' and [CT RATE FOR NI TRADING PROFITS] is different to all other CT rates and [CT RATE FOR NI TRADING PROFITS] appears in [390] then [586] must be completed.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
       <sch:assert id='a_F179b.0' diagnostics='errorCode.F179b.0 transactional.F179b.0 transactional.en.F179b.0 ' test='not((.))'>[535] must not be used.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TaxReconciliation/ct:ResearchAndDevelopmentVaccineOrCreativeTaxCredit'>
-      <sch:assert id='a_F179.0' diagnostics='errorCode.F179.0 transactional.F179.0 transactional.en.F179.0 transactional.cy.F179.0 ' test='(math:abs((.) - ((sum(../ct:ResearchAndDevelopmentCredit) + sum(../ct:VaccineCredit) + sum(../ct:CreativeCredit)))) &lt; 0.001)'>[545] should equal the sum of [530], [535] and [540]</sch:assert>
+      <sch:assert id='a_F179.0' diagnostics='errorCode.F179.0 transactional.F179.0 transactional.en.F179.0 transactional.cy.F179.0 ' test='(math:abs((.) - ((sum(../ct:ResearchAndDevelopmentCredit) + sum(../ct:VaccineCredit) + sum(../ct:CreativeCredit) + sum(../ct:AVECandVGEC)))) &lt; 0.001)'>[545] should equal the sum of [530], [535], [540] and [541]</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TaxReconciliation/ct:LandOrLifeCredit'>
       <sch:assert id='a_F184.0' diagnostics='errorCode.F184.0 transactional.F184.0 transactional.en.F184.0 transactional.cy.F184.0 ' test='(math:abs((.) - ((sum(../ct:LandRemediationCredit) + sum(../ct:LifeAssuranceCompanyCredit)))) &lt; 0.001)'>[560] should equal [550] plus [555]</sch:assert>
@@
       <sch:assert id='a_N059.0' diagnostics='errorCode.N059.0 transactional.N059.0 transactional.en.N059.0 transactional.cy.N059.0 ' test='not(ct:ResearchAndDevelopmentCredit) or ct:ResearchAndDevelopmentVaccineOrCreativeTaxCredit'>[545] should be present if [530] is present</sch:assert>
       <sch:assert id='a_N059.1' diagnostics='errorCode.N059.1 transactional.N059.1 transactional.en.N059.1 transactional.cy.N059.1 ' test='not(ct:VaccineCredit) or ct:ResearchAndDevelopmentVaccineOrCreativeTaxCredit'>[545] should be present if [535] is present</sch:assert>
       <sch:assert id='a_N059.2' diagnostics='errorCode.N059.2 transactional.N059.2 transactional.en.N059.2 transactional.cy.N059.2 ' test='not(ct:CreativeCredit) or ct:ResearchAndDevelopmentVaccineOrCreativeTaxCredit'>[545] should be present if [540] is present</sch:assert>
       <sch:assert id='a_N059.3' diagnostics='errorCode.N059.3 transactional.N059.3 transactional.en.N059.3 transactional.cy.N059.3 ' test='not(ct:LandRemediationCredit) or ct:LandOrLifeCredit'>[560] should be present if [550] is present</sch:assert>
       <sch:assert id='a_N059.4' diagnostics='errorCode.N059.4 transactional.N059.4 transactional.en.N059.4 transactional.cy.N059.4 ' test='not(ct:LifeAssuranceCompanyCredit) or ct:LandOrLifeCredit'>[560] should be present if [555] is present</sch:assert>
+      <sch:assert id='a_N059.5' diagnostics='errorCode.N059.5 transactional.N059.5 transactional.en.N059.5 ' test='not(ct:AVECandVGEC) or ct:ResearchAndDevelopmentVaccineOrCreativeTaxCredit'>[545] should be present if [541] is present</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:IndicatorsAndInformation/ct:NumberOf51groupCompanies'>
       <sch:assert id='a_F231.0' diagnostics='errorCode.F231.0 transactional.F231.0 transactional.en.F231.0 ' test="not((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))">[625] should not be present if [35] on or after '2023-04-01'</sch:assert>
@@
       <sch:assert id='a_F246.0' diagnostics='errorCode.F246.0 transactional.F246.0 transactional.en.F246.0 ' test='not(../ct:InstalmentPayments)'>[631] should not be present if [630] is present</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:SMEclaim'>
-      <sch:assert id='a_F204.1' diagnostics='errorCode.F204.1 transactional.F204.1 transactional.en.F204.1 transactional.cy.F204.1 ' test='not((.) = &quot;yes&quot;)                  or (sum(../ct:RandDAndCreativeEnhancedExpenditure) &gt; 0)                 or (sum(../ct:SMEclaimAsLargeCompany) &gt; 0)                 or (sum(../ct:VaccineResearch) &gt; 0)'>If [650] equals 'yes' then at least one of [670], [675] and [680] must be greater than 0</sch:assert>
       <sch:assert id='a_F204.0' diagnostics='errorCode.F204.0 transactional.F204.0 transactional.en.F204.0 transactional.cy.F204.0 ' test="not((../ct:LargeCompanyClaim = 'yes') and (.))">[650] should not be present if [655] equals 'yes'</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:RAndDIntensiveSMEclaim'>
+      <sch:assert id='a_F216.0' diagnostics='errorCode.F216.0 transactional.F216.0 transactional.en.F216.0 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space('2023-03-31')) div 86400)))">[653] should not be present if [35] on or before '2023-03-31'</sch:assert>
+      <sch:assert id='a_F216.1' diagnostics='errorCode.F216.1 transactional.F216.1 transactional.en.F216.1 ' test="../ct:SMEclaim = 'yes'">[653] should not be present if [650] does not equal 'yes'</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:LargeCompanyClaim'>
       <sch:assert id='a_F205.3' diagnostics='errorCode.F205.3 transactional.F205.3 transactional.en.F205.3 transactional.cy.F205.3 ' test="not((../ct:SMEclaim = 'yes') and (.))">[655] should not be present if [650] equals 'yes'</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:AdditionalRAndDForm'>
       <sch:assert id='a_F211.0' diagnostics='errorCode.F211.0 transactional.F211.0 transactional.en.F211.0 ' test="(../ct:SMEclaim = 'yes') or (../ct:LargeCompanyClaim = 'yes')">If [657] is present the following should be true: ( [650] equals 'yes' ) or ( [655] equals 'yes' )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:AdditionalCreativesForm'>
+      <sch:assert id='a_F217.0' diagnostics='errorCode.F217.0 transactional.F217.0 transactional.en.F217.0 ' test="(../ct:SMEclaim = 'yes') or (../ct:LargeCompanyClaim = 'yes')">If [658] is present the following should be true: ( [650] equals 'yes' ) or ( [655] equals 'yes' )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:RAndDExpenditureSME'>
       <sch:assert id='a_F215.0' diagnostics='errorCode.F215.0 transactional.F215.0 transactional.en.F215.0 ' test="../ct:SMEclaim = 'yes'">[659] should not be present if [650] does not equal 'yes'</sch:assert>
       <sch:assert id='a_F215.1' diagnostics='errorCode.F215.1 transactional.F215.1 transactional.en.F215.1 ' test="not(../../ct:ResearchAndDevelopment/ct:SME/ct:RandDexpenditure)               or (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))               or (math:abs((.) - (sum(../../ct:ResearchAndDevelopment/ct:SME/ct:RandDexpenditure))) &lt; 0.001)">If [L166] is present and [30] onOrAfter '2023-04-01' [659] must equal [L166]</sch:assert>
+      <sch:assert id='a_F215.2' diagnostics='errorCode.F215.2 transactional.F215.2 transactional.en.F215.2 ' test="not(((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) and (not(../ct:RAndDIntensiveSMEclaim = 'yes')))">[659] should not be present if ( [30] on or after '2024-04-01' ) and ( [653] does not equal 'yes' )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:RandDEnhancedExpenditure'>
       <sch:assert id='a_F181a.0' diagnostics='errorCode.F181a.0 transactional.F181a.0 transactional.en.F181a.0 transactional.cy.F181a.0 ' test="../ct:SMEclaim = 'yes' or ../ct:LargeCompanyClaim = 'yes'">If [660] is present then [650] should equal 'yes' or [655] should equal 'yes'</sch:assert>
       <sch:assert id='a_F181a.1' diagnostics='errorCode.F181a.1 transactional.F181a.1 transactional.en.F181a.1 ' test="not(not(../ct:RAndDExpenditureSME) and ((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))))">[660] should not be present if [659] is not present and [30] is on or after '2023-04-01'</sch:assert>
+      <sch:assert id='a_F181a.2' diagnostics='errorCode.F181a.2 transactional.F181a.2 transactional.en.F181a.2 ' test="not(((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) and (not(../ct:RAndDIntensiveSMEclaim = 'yes')))">[660] should not be present if ( [30] on or after '2024-04-01' ) and ( [653] does not equal 'yes' )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:RandDAndCreativeEnhancedExpenditure'>
       <sch:assert id='a_F181.0' diagnostics='errorCode.F181.0 transactional.F181.0 transactional.en.F181.0 transactional.cy.F181.0 ' test='(math:abs((.) - ((sum(../ct:RandDEnhancedExpenditure) + sum(../ct:CreativeEnhancedExpenditure)))) &lt; 0.001)'>[670] should equal [660] plus [665]</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:SMEclaimAsLargeCompany'>
       <sch:assert id='a_F207.1' diagnostics='errorCode.F207.1 transactional.F207.1 transactional.en.F207.1 transactional.cy.F207.1 ' test="../ct:SMEclaim = 'yes'">[650] should equal 'yes' if [675] is present</sch:assert>
+      <sch:assert id='a_F207.0' diagnostics='errorCode.F207.0 transactional.F207.0 transactional.en.F207.0 ' test="not((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))">[675] should not be present if [30] on or after '2024-04-01'</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:EnhancedExpenditure/ct:VaccineResearch'>
       <sch:assert id='a_F206.0' diagnostics='errorCode.F206.0 transactional.F206.0 transactional.en.F206.0 transactional.cy.F206.0 ' test="(../ct:SMEclaim = 'yes') or (../ct:LargeCompanyClaim = 'yes')">If [680] is present then [650] should equal 'yes' or [655] should equal 'yes'</sch:assert>
@@
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDTaxCredit'>
       <sch:assert id='a_N071.0' diagnostics='errorCode.N071.0 transactional.N071.0 transactional.en.N071.0 ' test="../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600L = 'yes'">[875] should only be present if [142] equals 'yes'</sch:assert>
-      <sch:assert id='a_N071.1' diagnostics='errorCode.N071.1 transactional.N071.1 transactional.en.N071.1 ' test='. &lt;= sum(../../../ct:ResearchAndDevelopment/ct:SME/ct:RandDBalancePayableTaxCredit)'>[875] should not exceed [L180]</sch:assert>
+      <sch:assert id='a_N071.1' diagnostics='errorCode.N071.1 transactional.N071.1 transactional.en.N071.1 ' test='. = sum(../../../ct:ResearchAndDevelopment/ct:SME/ct:RandDBalancePayableTaxCredit)'>[875] should equal [L180]</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDExpenditureCredit'>
       <sch:assert id='a_N199.0' diagnostics='errorCode.N199.0 transactional.N199.0 transactional.en.N199.0 ' test="../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600L = 'yes'">[880] should only be present if [142] equals 'yes'</sch:assert>
@@
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:Surrender/ct:StopUntilNotice'>
       <sch:assert id='a_N080.1' diagnostics='errorCode.N080.1 transactional.N080.1 transactional.en.N080.1 transactional.cy.N080.1 ' test='. &lt;= ../ct:Amount'>[915] should not exceed [900]</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:RAndDCreditWithCondition'>
+      <sch:assert id='a_N111.0' diagnostics='errorCode.N111.0 transactional.N111.0 transactional.en.N111.0 ' test="not((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) and not(../ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDTaxCredit or ../ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDExpenditureCredit))">[943] should not be present if [875] is not present and [880] is not present and [30] is on or after '2024-04-01'</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:PaymentToPerson'>
+      <sch:assert id='a_N087.0' diagnostics='errorCode.N087.0 transactional.N087.0 transactional.en.N087.0 ' test="not((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) and not(../ct:RAndDCreditWithCondition = 'yes') and (../ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDTaxCredit or ../ct:RepaymentsForThePeriodCoveredByThisReturn/ct:RandDExpenditureCredit))">[N087] should not be present if [943] is absent and either [875] or [880] are present and [30] is on or after '2024-04-01'</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoansInformation/ct:TotalLoans'>
       <sch:assert id='a_SA012.0' diagnostics='errorCode.SA012.0 transactional.SA012.0 transactional.en.SA012.0 transactional.cy.SA012.0 ' test='(math:abs((.) - (sum(../ct:Loan/ct:AmountOfLoan))) &lt; 0.001)'>[A15] should equal the sum of all iterations of [A10B]</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:Loan/ct:Date'>
       <sch:assert id='a_SA018.0' diagnostics='errorCode.SA018.0 transactional.SA018.0 transactional.en.SA018.0 transactional.cy.SA018.0 ' test="(round(date:seconds(normalize-space(date:add(normalize-space((.)),normalize-space('-P9M1D')))) div 86400) &lt; round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))">[A25D] must be before nine months and one day after [35]. If [35] is on the last day of the month, [A25D] must be before the first day of the month ten months after [35].</sch:assert>
       <sch:assert id='a_SA018.1' diagnostics='errorCode.SA018.1 transactional.SA018.1 transactional.en.SA018.1 transactional.cy.SA018.1 ' test='(round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space((.))) div 86400))'>[A25D] should be after [35]</sch:assert>
+      <sch:assert id='a_SA018.2' diagnostics='errorCode.SA018.2 transactional.SA018.2 transactional.en.SA018.2 ' test='(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))'>[A25D] should be no later than today.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:Loan'>
       <sch:assert id='a_LOAN2.2' diagnostics='errorCode.LOAN2.2 transactional.LOAN2.2 transactional.en.LOAN2.2 transactional.cy.LOAN2.2 ' test='(sum(ct:AmountRepaid) &gt; 0) or (sum(ct:AmountReleasedOrWrittenOff) &gt; 0)'>Within each iteration of [A25] at least one of [A25B] and [A25C] should be greater than 0</sch:assert>
@@
       <sch:assert id='a_SL011.0' diagnostics='errorCode.SL011.0 transactional.SL011.0 transactional.en.SL011.0 ' test='(math:abs((.) - ((sum(../../ct:Step1/ct:TotalRDECforTheAccountingPeriod) - sum(../../ct:Step1/ct:AmountOfRDECusedToDischargeCorporationTaxAtStep1)))) &lt; 0.001)'>[L50] is valid only if it equals ( [L25] minus [L45] )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:Step2/ct:CorporationTaxChargeOnRDECforThisAccountingPeriod'>
-      <sch:assert id='a_SL012.0' diagnostics='errorCode.SL012.0 transactional.SL012.0 transactional.en.SL012.0 ' test="((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * 19 div 100.0) &gt; -0.001) and (round(date:seconds(normalize-space(2050-04-01)) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     25  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     25  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     30  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     30  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     19  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     19  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     20  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     20  div 100.0)) &gt; -0.001))">[L55] must not be less than [L15] multiplied by the lowest of ([CT RATE FOR NI TRADING PROFITS], [FULL RATE OF CT], [FULL RF RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE]) at either [30] or [35]</sch:assert>
+      <sch:assert id='a_SL012.0' diagnostics='errorCode.SL012.0 transactional.SL012.0 transactional.en.SL012.0 ' test="((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * 19 div 100.0) &gt; -0.001) and (round(date:seconds(normalize-space(2050-04-01)) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     25  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     25  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     30  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     30  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * 19 div 100.0) &gt; -0.001) and (round(date:seconds(normalize-space(2023-04-01)) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * 19 div 100.0) &gt; -0.001) and (round(date:seconds(normalize-space(2023-04-01)) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     19  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     19  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     20  div 100.0)) &gt; -0.001))       or       ((((.)) - (sum(../../ct:Step1/ct:RDECclaimForThisAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     20  div 100.0)) &gt; -0.001))">[L55] must not be less than [L15] multiplied by the lowest of ([CT RATE FOR NI TRADING PROFITS], [FULL RATE OF CT], [FULL RF RATE OF CT], [SMALL CO RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE]) at either [30] or [35]</sch:assert>
       <sch:assert id='a_SL012.1' diagnostics='errorCode.SL012.1 transactional.SL012.1 transactional.en.SL012.1 ' test='not((.)) or ../ct:TotalRDECarisingInThisAPlessCorporationTaxChargeOnTheRDECforThisAP'>[L60] should be present if [L55] is present</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:Step2/ct:TotalRDECarisingInThisAPlessCorporationTaxChargeOnTheRDECforThisAP'>
@@
       <sch:assert id='a_SL045.0' diagnostics='errorCode.SL045.0 transactional.SL045.0 transactional.en.SL045.0 ' test='../ct:RandDPayableTaxCreditClaim'>If [L180] is present [L170] should be present</sch:assert>
       <sch:assert id='a_SL045.1' diagnostics='errorCode.SL045.1 transactional.SL045.1 transactional.en.SL045.1 ' test='(math:abs((.) - ((sum(../ct:RandDPayableTaxCreditClaim) - sum(../ct:RandDPayableTaxCreditSetOffAgainstOtherLiabilitiesOnThisReturn)))) &lt; 0.001)'>[L180] should equal ( [L170] minus [L175] )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:SME/ct:RDECclaimFromWorkSubcontractedToItByALargeCompany'>
+      <sch:assert id='a_SL046.0' diagnostics='errorCode.SL046.0 transactional.SL046.0 transactional.en.SL046.0 ' test="not((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))">[L185] should not be present if [30] on or after '2024-04-01'</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:SME/ct:RDECclaimFromSubsidisedAndCappedWork'>
+      <sch:assert id='a_SL047.0' diagnostics='errorCode.SL047.0 transactional.SL047.0 transactional.en.SL047.0 ' test="not((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))">[L190] should not be present if [30] on or after '2024-04-01'</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:SME'>
       <sch:assert id='a_SL042.0' diagnostics='errorCode.SL042.0 transactional.SL042.0 transactional.en.SL042.0 ' test='ct:RandDPayableTaxCreditClaim or ct:RDECclaimFromWorkSubcontractedToItByALargeCompany or ct:RDECclaimFromSubsidisedAndCappedWork'>If [SL042] is present at least one of [L170] and [L185] and [L190] should be present</sch:assert>
       <sch:assert id='a_SL042.1' diagnostics='errorCode.SL042.1 transactional.SL042.1 transactional.en.SL042.1 ' test="not(ct:DoesTheExceptionAtS1058DCTA2009apply = 'yes') or ct:TotalExpenditureOnExternallyProvidedWorkersFromAndSubcontractingToConnectedPersons">[L167A] should be present if [L167] equals 'yes'</sch:assert>
       <sch:assert id='a_SL042.3' diagnostics='errorCode.SL042.3 transactional.SL042.3 transactional.en.SL042.3 ' test='not(ct:PAYENICforWhichTheCompanyIsLiableInThisAccountingPeriod) or ct:EmployerPAYEreference'>[L168A] should be present if [L168] is present</sch:assert>
       <sch:assert id='a_SL042.4' diagnostics='errorCode.SL042.4 transactional.SL042.4 transactional.en.SL042.4 ' test='not(ct:RelevantPAYENICliabilityOfConnectedCompanies) or ct:ConnectedCompaniesEmployerPAYEreference'>[L169A] should be present if [L169] is present</sch:assert>
+      <sch:assert id='a_SL042.2' diagnostics='errorCode.SL042.2 transactional.SL042.2 transactional.en.SL042.2 ' test="not(((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) and (not(../../ct:EnhancedExpenditure/ct:RAndDIntensiveSMEclaim = 'yes')))">[SL042] should not be present if ( [30] on or after '2024-04-01' ) and ( [653] does not equal 'yes' )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ResearchAndDevelopment/ct:TotalRandDSetOffAgainstLiabilities/ct:RDECpreStep1DischargeAmount'>
       <sch:assert id='a_SL069.0' diagnostics='errorCode.SL069.0 transactional.SL069.0 transactional.en.SL069.0 ' test='. = sum(../../ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardRDEC)'>[L194] is valid only if this equals [L7]</sch:assert>
@@
       <sch:assert id='a_CT600N.0' diagnostics='errorCode.CT600N.0 transactional.CT600N.0 transactional.en.CT600N.0 ' test='ct:Section1 or ct:Section2 or ct:Section3 or ct:Section4'>At least one of [SN001], [SN018], [SN029] or [SN095] should be present</sch:assert>
       <sch:assert id='a_N120.0' diagnostics='errorCode.N120.0 transactional.N120.0 transactional.en.N120.0 ' test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600N = 'yes'">[144] should equal 'yes' if [N120] is present.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalRelevantGlobalExpenditure'>
+      <sch:assert id='a_SP023.0' diagnostics='errorCode.SP023.0 transactional.SP023.0 transactional.en.SP023.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:RelevantGlobalExpenditure) + sum(../../ct:HighEndTV/ct:RelevantGlobalExpenditure) + sum(../../ct:ChildrensTV/ct:RelevantGlobalExpenditure) + sum(../../ct:Animation/ct:RelevantGlobalExpenditure) + sum(../../ct:IndependentFilm/ct:RelevantGlobalExpenditure)))) &lt; 0.001)'>[P30A] is valid only if this equals ( The sum of [P5A], [P10A], [P15A], [P20A], and [P25A] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalQualifyingExpenditure'>
+      <sch:assert id='a_SP024.0' diagnostics='errorCode.SP024.0 transactional.SP024.0 transactional.en.SP024.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:QualifyingExpenditure) + sum(../../ct:HighEndTV/ct:QualifyingExpenditure) + sum(../../ct:ChildrensTV/ct:QualifyingExpenditure) + sum(../../ct:Animation/ct:QualifyingExpenditure) + sum(../../ct:IndependentFilm/ct:QualifyingExpenditure)))) &lt; 0.001)'>[P30B] is valid only if this equals ( The sum of [P5B], [P10B], [P15B], [P20B], and [P25B] )</sch:assert>
+      <sch:assert id='a_SP024.1' diagnostics='errorCode.SP024.1 transactional.SP024.1 transactional.en.SP024.1 ' test='../../../ct:Step1/ct:QualifyingExpenditureOnWhichAVECisClaimedInThisAccountingPeriod'>[P75] should be present if [P30B] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalExpenditureCreditClaimed'>
+      <sch:assert id='a_SP025.0' diagnostics='errorCode.SP025.0 transactional.SP025.0 transactional.en.SP025.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:ExpenditureCreditClaimed) + sum(../../ct:HighEndTV/ct:ExpenditureCreditClaimed) + sum(../../ct:ChildrensTV/ct:ExpenditureCreditClaimed) + sum(../../ct:Animation/ct:ExpenditureCreditClaimed) + sum(../../ct:IndependentFilm/ct:ExpenditureCreditClaimed)))) &lt; 0.001)'>[P30C] is valid only if this equals ( The sum of [P5C], [P10C], [P15C], [P20C], and [P25C] )</sch:assert>
+      <sch:assert id='a_SP025.1' diagnostics='errorCode.SP025.1 transactional.SP025.1 transactional.en.SP025.1 ' test='../../../ct:Step1/ct:AVECclaim'>[P80] should be present if [P30C] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AudioVisualExpenditureCredit'>
+      <sch:assert id='a_SP001.0' diagnostics='errorCode.SP001.0 transactional.SP001.0 transactional.en.SP001.0 ' test='ct:Film or ct:HighEndTV or ct:ChildrensTV or ct:Animation or ct:IndependentFilm'>If [SP001] is present the following should be true: [P5] is present or [P10] is present or [P15] is present or [P20] is present or [P25] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalRelevantGlobalExpenditure'>
+      <sch:assert id='a_SP032.0' diagnostics='errorCode.SP032.0 transactional.SP032.0 transactional.en.SP032.0 ' test='. = ../../ct:VideoGames/ct:RelevantGlobalExpenditure'>[P45A] is valid only if this equals [P35A]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalQualifyingExpenditure'>
+      <sch:assert id='a_SP033.0' diagnostics='errorCode.SP033.0 transactional.SP033.0 transactional.en.SP033.0 ' test='. = ../../ct:VideoGames/ct:QualifyingExpenditure'>[P45B] is valid only if this equals [P35B]</sch:assert>
+      <sch:assert id='a_SP033.1' diagnostics='errorCode.SP033.1 transactional.SP033.1 transactional.en.SP033.1 ' test='../../../ct:Step1/ct:QualifyingExpenditureOnWhichVGECisClaimedInThisAccountingPeriod'>[P85] should be present if [P45B] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalExpenditureCreditClaimed'>
+      <sch:assert id='a_SP034.0' diagnostics='errorCode.SP034.0 transactional.SP034.0 transactional.en.SP034.0 ' test='. = ../../ct:VideoGames/ct:ExpenditureCreditClaimed'>[P45C] is valid only if this equals [P35C]</sch:assert>
+      <sch:assert id='a_SP034.1' diagnostics='errorCode.SP034.1 transactional.SP034.1 transactional.en.SP034.1 ' test='../../../ct:Step1/ct:VGECclaim'>[P90] should be present if [P45C] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:PreStep1Restriction/ct:CorporationTaxLiability'>
+      <sch:assert id='a_SP037.0' diagnostics='errorCode.SP037.0 transactional.SP037.0 transactional.en.SP037.0 ' test='(((sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)) - (sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability)) &lt;= -0.001) and (math:abs((.) - ((sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability) - sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)))) &lt; 0.001))       or       (((sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)) - (sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability)) &gt; -0.001) and (math:abs((.) - (0.00)) &lt; 0.001))'>If [530] is less than [475] then [P55] must equal [475] - [530], else [P55] must equal zero</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardAndSurrenderedAVECVGEC'>
+      <sch:assert id='a_SP038.0' diagnostics='errorCode.SP038.0 transactional.SP038.0 transactional.en.SP038.0 ' test='. &lt;= ../ct:Step2RestrictionBroughtForward'>[P60] is valid only if this does not exceed [P50]</sch:assert>
+      <sch:assert id='a_SP038.1' diagnostics='errorCode.SP038.1 transactional.SP038.1 transactional.en.SP038.1 ' test='. &lt;= ../ct:CorporationTaxLiability'>[P60] is valid only if this does not exceed [P55]</sch:assert>
+      <sch:assert id='a_SP038.2' diagnostics='errorCode.SP038.2 transactional.SP038.2 transactional.en.SP038.2 ' test='../../ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECpreStep1DischargeAmount'>[P230] should be present if [P60] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardAVECVGECcarriedForward'>
+      <sch:assert id='a_SP039.0' diagnostics='errorCode.SP039.0 transactional.SP039.0 transactional.en.SP039.0 ' test='(math:abs((.) - ((../ct:Step2RestrictionBroughtForward - ../ct:AmountOfStep2BroughtForwardAndSurrenderedAVECVGEC))) &lt; 0.001)'>[P65] is valid only if this equals ( [P50] minus [P60] )</sch:assert>
+      <sch:assert id='a_SP039.1' diagnostics='errorCode.SP039.1 transactional.SP039.1 transactional.en.SP039.1 ' test='. = sum(../../ct:AVECVGECcarriedForward/ct:PreStep1Restriction)'>[P65] is valid only if this equals [P195]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:PreStep1Restriction/ct:RemainingCorporationTaxLiabilityCarriedForwardToStep1'>
+      <sch:assert id='a_SP040.0' diagnostics='errorCode.SP040.0 transactional.SP040.0 transactional.en.SP040.0 ' test='(math:abs((.) - ((../ct:CorporationTaxLiability - ../ct:AmountOfStep2BroughtForwardAndSurrenderedAVECVGEC))) &lt; 0.001)'>[P70] is valid only if this equals ( [P55] minus [P60] )</sch:assert>
+      <sch:assert id='a_SP040.1' diagnostics='errorCode.SP040.1 transactional.SP040.1 transactional.en.SP040.1 ' test='. = sum(../../ct:Step1/ct:RemainingCorporationTaxLiability)'>[P70] is valid only if this equals [P100]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:PreStep1Restriction'>
+      <sch:assert id='a_SP035.0' diagnostics='errorCode.SP035.0 transactional.SP035.0 transactional.en.SP035.0 ' test='../ct:AVECVGECcarriedForward'>[SP071] should be present if [SP035] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:QualifyingExpenditureOnWhichAVECisClaimedInThisAccountingPeriod'>
+      <sch:assert id='a_SP042.0' diagnostics='errorCode.SP042.0 transactional.SP042.0 transactional.en.SP042.0 ' test='../../ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalQualifyingExpenditure'>If [P75] is present the following should be true: [P30B] is present</sch:assert>
+      <sch:assert id='a_SP042.1' diagnostics='errorCode.SP042.1 transactional.SP042.1 transactional.en.SP042.1 ' test='. = sum(../../ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalQualifyingExpenditure)'>[P75] is valid only if this equals [P30B]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:AVECclaim'>
+      <sch:assert id='a_SP043.0' diagnostics='errorCode.SP043.0 transactional.SP043.0 transactional.en.SP043.0 ' test='../../ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalExpenditureCreditClaimed'>If [P80] is present the following should be true: [P30C] is present</sch:assert>
+      <sch:assert id='a_SP043.1' diagnostics='errorCode.SP043.1 transactional.SP043.1 transactional.en.SP043.1 ' test='. = sum(../../ct:AudioVisualExpenditureCredit/ct:TotalAudioVisual/ct:TotalExpenditureCreditClaimed)'>[P80] is valid only if this equals [P30C]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:QualifyingExpenditureOnWhichVGECisClaimedInThisAccountingPeriod'>
+      <sch:assert id='a_SP044.0' diagnostics='errorCode.SP044.0 transactional.SP044.0 transactional.en.SP044.0 ' test='../../ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalQualifyingExpenditure'>If [P85] is present the following should be true: [P45B] is present</sch:assert>
+      <sch:assert id='a_SP044.1' diagnostics='errorCode.SP044.1 transactional.SP044.1 transactional.en.SP044.1 ' test='. = sum(../../ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalQualifyingExpenditure)'>[P85] is valid only if this equals [P45B]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:VGECclaim'>
+      <sch:assert id='a_SP045.0' diagnostics='errorCode.SP045.0 transactional.SP045.0 transactional.en.SP045.0 ' test='../../ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalExpenditureCreditClaimed'>If [P90] is present the following should be true: [P45C] is present</sch:assert>
+      <sch:assert id='a_SP045.1' diagnostics='errorCode.SP045.1 transactional.SP045.1 transactional.en.SP045.1 ' test='. = sum(../../ct:VideoGamesExpenditureCredit/ct:TotalVideoGames/ct:TotalExpenditureCreditClaimed)'>[P90] is valid only if this equals [P45C]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod'>
+      <sch:assert id='a_SP046.0' diagnostics='errorCode.SP046.0 transactional.SP046.0 transactional.en.SP046.0 ' test='(math:abs((.) - ((sum(../ct:AVECclaim) + sum(../ct:VGECclaim)))) &lt; 0.001)'>[P95] is valid only if this equals ( [P80] plus [P90] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:RemainingCorporationTaxLiability'>
+      <sch:assert id='a_SP047.0' diagnostics='errorCode.SP047.0 transactional.SP047.0 transactional.en.SP047.0 ' test='(not(../../ct:PreStep1Restriction/ct:RemainingCorporationTaxLiabilityCarriedForwardToStep1) and ((sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)) - (sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability)) &lt;= -0.001) and (math:abs((.) - ((sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability) - sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)))) &lt; 0.001))                     or       (not(../../ct:PreStep1Restriction/ct:RemainingCorporationTaxLiabilityCarriedForwardToStep1) and ((sum(../../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)) - (sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability)) &gt; -0.001) and (math:abs((.) - (0.00)) &lt; 0.001))       or       ../../ct:PreStep1Restriction/ct:RemainingCorporationTaxLiabilityCarriedForwardToStep1'>If [P70] is not present and [475] is greater than or equal to [530] then [P100] must equal [475] minus [530], else if [P70] is not present and [475] is less than [530] then [P100] must equal zero.</sch:assert>
+      <sch:assert id='a_SP047.1' diagnostics='errorCode.SP047.1 transactional.SP047.1 transactional.en.SP047.1 ' test='../ct:MaximumAmountAvailableForStep1SetOff'>[P110] should be present if [P100] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:IncomeTaxDeductedFromProfits'>
+      <sch:assert id='a_SP048.0' diagnostics='errorCode.SP048.0 transactional.SP048.0 transactional.en.SP048.0 ' test='../ct:RemainingCorporationTaxLiability'>If [P105] is present the following should be true: [P100] is present</sch:assert>
+      <sch:assert id='a_SP048.1' diagnostics='errorCode.SP048.1 transactional.SP048.1 transactional.en.SP048.1 ' test='. &lt;= sum(../../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:IncomeTax/ct:DeductedIncomeTax)'>[P105] is valid only if this does not exceed [515]</sch:assert>
+      <sch:assert id='a_SP048.2' diagnostics='errorCode.SP048.2 transactional.SP048.2 transactional.en.SP048.2 ' test='. &lt;= sum(../ct:RemainingCorporationTaxLiability)'>[P105] is valid only if this does not exceed [P100]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:MaximumAmountAvailableForStep1SetOff'>
+      <sch:assert id='a_SP049.0' diagnostics='errorCode.SP049.0 transactional.SP049.0 transactional.en.SP049.0 ' test='../ct:RemainingCorporationTaxLiability'>If [P110] is present the following should be true: [P100] is present</sch:assert>
+      <sch:assert id='a_SP049.1' diagnostics='errorCode.SP049.1 transactional.SP049.1 transactional.en.SP049.1 ' test='(math:abs((.) - ((sum(../ct:RemainingCorporationTaxLiability) - sum(../ct:IncomeTaxDeductedFromProfits)))) &lt; 0.001)'>[P110] is valid only if this equals ( [P100] minus [P105] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1/ct:AmountOfAVECVGECusedToDischargeCorporationTaxAtStep1'>
+      <sch:assert id='a_SP050.0' diagnostics='errorCode.SP050.0 transactional.SP050.0 transactional.en.SP050.0 ' test='((../ct:TotalAVECandVGECforTheAccountingPeriod &lt;= sum(../ct:MaximumAmountAvailableForStep1SetOff)) and (.) = ../ct:TotalAVECandVGECforTheAccountingPeriod)             or  ((sum(../ct:MaximumAmountAvailableForStep1SetOff) &lt; ../ct:TotalAVECandVGECforTheAccountingPeriod) and (.) = sum(../ct:MaximumAmountAvailableForStep1SetOff))'>Must equal the lesser of [P95] and [P110]. If [P110] is not present then [P115] must equal zero</sch:assert>
+      <sch:assert id='a_SP050.1' diagnostics='errorCode.SP050.1 transactional.SP050.1 transactional.en.SP050.1 ' test='../../ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECstep1DischargeAmount'>[P235] should be present if [P115] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step1'>
+      <sch:assert id='a_SP041.0' diagnostics='errorCode.SP041.0 transactional.SP041.0 transactional.en.SP041.0 ' test='not((../ct:PreStep1Restriction/ct:RemainingCorporationTaxLiabilityCarriedForwardToStep1 or (sum(../../ct:CalculationOfTaxOutstandingOrOverpaid/ct:NetCorporationTaxLiability) &gt; sum(../../ct:TaxReconciliation/ct:ResearchAndDevelopmentCredit)))) or ct:RemainingCorporationTaxLiability'>[P100] should be present if ( [P70] is present or ( [475] exceeds [530] ) ) and [SP041] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2/ct:Step1BalanceCarriedForwardToStep2'>
+      <sch:assert id='a_SP052.0' diagnostics='errorCode.SP052.0 transactional.SP052.0 transactional.en.SP052.0 ' test='(math:abs((.) - ((sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) - sum(../../ct:Step1/ct:AmountOfAVECVGECusedToDischargeCorporationTaxAtStep1)))) &lt; 0.001)'>[P120] is valid only if this equals ( [P95] minus [P115] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2/ct:CorporationTaxChargeOnAVECandVGECforThisAP'>
+      <sch:assert id='a_SP053.0' diagnostics='errorCode.SP053.0 transactional.SP053.0 transactional.en.SP053.0 ' test="((((.)) - (sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *     25 ) div 100.0) &gt; -0.001))               or  ((((.)) - (sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) * (    number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2017-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2017-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *      number((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space('2023-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2023-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *     25 ) div 100.0) &gt; -0.001))">[P125] must not be less than [P95] multiplied by [FULL RATE OF CT] at either [30] or [35]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2/ct:TotalAVECandVGECarisingInThisAPlessCorporationTaxChargeOnTheAVECandVGECforThisAP'>
+      <sch:assert id='a_SP054.0' diagnostics='errorCode.SP054.0 transactional.SP054.0 transactional.en.SP054.0 ' test='(math:abs((.) - ((sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) - ../ct:CorporationTaxChargeOnAVECandVGECforThisAP))) &lt; 0.001)'>[P130] is valid only if this equals ( [P95] minus [P125] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2/ct:AVECandVGECarisingInThisAPlessRemainingCorporationTaxLiabilityAtStep1'>
+      <sch:assert id='a_SP055.0' diagnostics='errorCode.SP055.0 transactional.SP055.0 transactional.en.SP055.0 ' test='(((sum(../../ct:Step1/ct:MaximumAmountAvailableForStep1SetOff)) - (sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod)) &lt;= -0.001) and (math:abs((.) - ((sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) - sum(../../ct:Step1/ct:MaximumAmountAvailableForStep1SetOff)))) &lt; 0.001))       or       (((sum(../../ct:Step1/ct:MaximumAmountAvailableForStep1SetOff)) - (sum(../../ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod)) &gt; -0.001) and (math:abs((.) - (0.00)) &lt; 0.001))'>If [P110] is less than [P95] then [P135] must equal [P95] - [P110], else [P135] must equal zero</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2/ct:Step2RestrictionCarriedForwardToNextAP'>
+      <sch:assert id='a_SP056.0' diagnostics='errorCode.SP056.0 transactional.SP056.0 transactional.en.SP056.0 ' test='. &lt;= ../ct:Step1BalanceCarriedForwardToStep2'>[P140] is valid only if this does not exceed [P120]</sch:assert>
+      <sch:assert id='a_SP056.1' diagnostics='errorCode.SP056.1 transactional.SP056.1 transactional.en.SP056.1 ' test='. = sum(../../ct:AVECVGECcarriedForward/ct:Step2Restriction)'>[P140] is valid only if this equals [P200]</sch:assert>
+      <sch:assert id='a_SP056.2' diagnostics='errorCode.SP056.2 transactional.SP056.2 transactional.en.SP056.2 ' test='(((../ct:TotalAVECandVGECarisingInThisAPlessCorporationTaxChargeOnTheAVECandVGECforThisAP) - (../ct:AVECandVGECarisingInThisAPlessRemainingCorporationTaxLiabilityAtStep1) &lt;= -0.001) and (math:abs((.) - ((../ct:AVECandVGECarisingInThisAPlessRemainingCorporationTaxLiabilityAtStep1 - ../ct:TotalAVECandVGECarisingInThisAPlessCorporationTaxChargeOnTheAVECandVGECforThisAP))) &lt; 0.001))       or       (((../ct:TotalAVECandVGECarisingInThisAPlessCorporationTaxChargeOnTheAVECandVGECforThisAP) - (../ct:AVECandVGECarisingInThisAPlessRemainingCorporationTaxLiabilityAtStep1) &gt; -0.001) and (math:abs((.) - (0.00)) &lt; 0.001))'>If [P130] is less than [P135] then [P140] must equal [P135] - [P130], else [P140] must equal zero</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step2'>
+      <sch:assert id='a_SP051.0' diagnostics='errorCode.SP051.0 transactional.SP051.0 transactional.en.SP051.0 ' test='../ct:Step1'>If [SP051] is present then [SP041] should be present</sch:assert>
+      <sch:assert id='a_SP051.1' diagnostics='errorCode.SP051.1 transactional.SP051.1 transactional.en.SP051.1 ' test='../ct:AVECVGECcarriedForward'>[SP071] should be present if [SP051] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step3/ct:Step2BalanceCarriedForwardToStep3'>
+      <sch:assert id='a_SP058.0' diagnostics='errorCode.SP058.0 transactional.SP058.0 transactional.en.SP058.0 ' test='(math:abs((.) - ((sum(../../ct:Step2/ct:Step1BalanceCarriedForwardToStep2) - sum(../../ct:Step2/ct:Step2RestrictionCarriedForwardToNextAP)))) &lt; 0.001)'>[P145] is valid only if this equals ( [P120] minus [P140] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step3/ct:AmountUsedToDischargeCorporationTaxLiabilityOnAnotherAP'>
+      <sch:assert id='a_SP059.0' diagnostics='errorCode.SP059.0 transactional.SP059.0 transactional.en.SP059.0 ' test='. &lt;= ../ct:Step2BalanceCarriedForwardToStep3'>[P150] is valid only if this does not exceed [P145]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step3'>
+      <sch:assert id='a_SP057.0' diagnostics='errorCode.SP057.0 transactional.SP057.0 transactional.en.SP057.0 ' test='../ct:Step2'>If [SP057] is present the following should be true: [SP051] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step4/ct:Step3BalanceCarriedForwardToStep4'>
+      <sch:assert id='a_SP061.0' diagnostics='errorCode.SP061.0 transactional.SP061.0 transactional.en.SP061.0 ' test='(math:abs((.) - ((sum(../../ct:Step3/ct:Step2BalanceCarriedForwardToStep3) - sum(../../ct:Step3/ct:AmountUsedToDischargeCorporationTaxLiabilityOnAnotherAP)))) &lt; 0.001)'>[P155] is valid only if this equals ( [P145] minus [P150] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step4/ct:CreditSurrenderedToGroupMember'>
+      <sch:assert id='a_SP062.0' diagnostics='errorCode.SP062.0 transactional.SP062.0 transactional.en.SP062.0 ' test='. &lt;= ../ct:Step3BalanceCarriedForwardToStep4'>[P160] is valid only if this does not exceed [P155]</sch:assert>
+      <sch:assert id='a_SP062.1' diagnostics='errorCode.SP062.1 transactional.SP062.1 transactional.en.SP062.1 ' test='../../ct:AVECVGECsurrendered/ct:Step4CreditSurrenderedToGroupMember'>[P220] should be present if [P160] is present</sch:assert>
+      <sch:assert id='a_SP062.2' diagnostics='errorCode.SP062.2 transactional.SP062.2 transactional.en.SP062.2 ' test='../../ct:DetailsOfAVECVGECsurrendered'>[SP085] should be present if [P160] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step4'>
+      <sch:assert id='a_SP060.0' diagnostics='errorCode.SP060.0 transactional.SP060.0 transactional.en.SP060.0 ' test='../ct:Step3'>If [SP060] is present the following should be true: [SP057] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step5/ct:Step4BalanceCarriedForwardToStep5'>
+      <sch:assert id='a_SP064.0' diagnostics='errorCode.SP064.0 transactional.SP064.0 transactional.en.SP064.0 ' test='(math:abs((.) - ((sum(../../ct:Step4/ct:Step3BalanceCarriedForwardToStep4) - sum(../../ct:Step4/ct:CreditSurrenderedToGroupMember)))) &lt; 0.001)'>[P165] is valid only if this equals ( [P155] minus [P160] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step5/ct:AmountUsedToDischargeOtherCompanyLiabilityOnThisCorporationTaxSelfAssessment'>
+      <sch:assert id='a_SP065.0' diagnostics='errorCode.SP065.0 transactional.SP065.0 transactional.en.SP065.0 ' test='. &lt;= ../ct:Step4BalanceCarriedForwardToStep5'>[P170] is valid only if this does not exceed [P165]</sch:assert>
+      <sch:assert id='a_SP065.1' diagnostics='errorCode.SP065.1 transactional.SP065.1 transactional.en.SP065.1 ' test='../../ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECstep5DischargeAmountForThisAP'>[P240] should be present if [P170] is present</sch:assert>
+      <sch:assert id='a_SP065.2' diagnostics='errorCode.SP065.2 transactional.SP065.2 transactional.en.SP065.2 ' test='../ct:TotalUsedToDischargeOtherCompanyLiability'>[P180] should be present if [P170] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step5/ct:AmountUsedToDischargeAnyOtherCompanyLiability'>
+      <sch:assert id='a_SP066.0' diagnostics='errorCode.SP066.0 transactional.SP066.0 transactional.en.SP066.0 ' test='((.) - ((../ct:Step4BalanceCarriedForwardToStep5 - sum(../ct:AmountUsedToDischargeOtherCompanyLiabilityOnThisCorporationTaxSelfAssessment))) &lt; 0.001)'>[P175] is valid only if this does not exceed ( [P165] minus [P170] )</sch:assert>
+      <sch:assert id='a_SP066.1' diagnostics='errorCode.SP066.1 transactional.SP066.1 transactional.en.SP066.1 ' test='../ct:TotalUsedToDischargeOtherCompanyLiability'>[P180] should be present if [P175] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step5/ct:TotalUsedToDischargeOtherCompanyLiability'>
+      <sch:assert id='a_SP067.0' diagnostics='errorCode.SP067.0 transactional.SP067.0 transactional.en.SP067.0 ' test='(math:abs((.) - ((sum(../ct:AmountUsedToDischargeOtherCompanyLiabilityOnThisCorporationTaxSelfAssessment) + sum(../ct:AmountUsedToDischargeAnyOtherCompanyLiability)))) &lt; 0.001)'>[P180] is valid only if this equals ( [P170] plus [P175] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step5'>
+      <sch:assert id='a_SP063.0' diagnostics='errorCode.SP063.0 transactional.SP063.0 transactional.en.SP063.0 ' test='../ct:Step4'>If [SP063] is present the following should be true: [SP060] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step6/ct:AmountsNotPayable'>
+      <sch:assert id='a_SP069.0' diagnostics='errorCode.SP069.0 transactional.SP069.0 transactional.en.SP069.0 ' test='((.) - ((sum(../../ct:Step5/ct:Step4BalanceCarriedForwardToStep5) - sum(../../ct:Step5/ct:TotalUsedToDischargeOtherCompanyLiability))) &lt; 0.001)'>[P185] is valid only if this does not exceed ( [P165] minus [P180] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step6/ct:PayableAVECandVGEC'>
+      <sch:assert id='a_SP070.0' diagnostics='errorCode.SP070.0 transactional.SP070.0 transactional.en.SP070.0 ' test='../../../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:PayableAVECandVGEC'>If [P190] is present the following should be true: [886] is present</sch:assert>
+      <sch:assert id='a_SP070.1' diagnostics='errorCode.SP070.1 transactional.SP070.1 transactional.en.SP070.1 ' test='(math:abs((.) - ((sum(../../ct:Step5/ct:Step4BalanceCarriedForwardToStep5) - (sum(../../ct:Step5/ct:TotalUsedToDischargeOtherCompanyLiability) + sum(../ct:AmountsNotPayable))))) &lt; 0.001)'>[P190] is valid only if this equals ( [P165] minus ( [P180] plus [P185] ) )</sch:assert>
+      <sch:assert id='a_SP070.2' diagnostics='errorCode.SP070.2 transactional.SP070.2 transactional.en.SP070.2 ' test='. = sum(../../../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:PayableAVECandVGEC)'>[P190] is valid only if this equals [886]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:Step6'>
+      <sch:assert id='a_SP068.0' diagnostics='errorCode.SP068.0 transactional.SP068.0 transactional.en.SP068.0 ' test='../ct:Step5'>If [SP068] is present the following should be true: [SP063] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECcarriedForward/ct:PreStep1Restriction'>
+      <sch:assert id='a_SP072.0' diagnostics='errorCode.SP072.0 transactional.SP072.0 transactional.en.SP072.0 ' test='. = sum(../../ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardAVECVGECcarriedForward)'>[P195] is valid only if this equals [P65]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECcarriedForward/ct:Step2Restriction'>
+      <sch:assert id='a_SP073.0' diagnostics='errorCode.SP073.0 transactional.SP073.0 transactional.en.SP073.0 ' test='. = sum(../../ct:Step2/ct:Step2RestrictionCarriedForwardToNextAP)'>[P200] is valid only if this equals [P140]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECcarriedForward/ct:SurrenderedToOtherGroupCompany'>
+      <sch:assert id='a_SP074.0' diagnostics='errorCode.SP074.0 transactional.SP074.0 transactional.en.SP074.0 ' test='../../ct:AVECVGECsurrendered/ct:Step2RestrictionSurrendered'>If [P205] is present the following should be true: [P215] is present</sch:assert>
+      <sch:assert id='a_SP074.1' diagnostics='errorCode.SP074.1 transactional.SP074.1 transactional.en.SP074.1 ' test='((.) - ((sum(../ct:PreStep1Restriction) + ../ct:Step2Restriction)) &lt; 0.001)'>[P205] is valid only if this does not exceed ( [P195] plus [P200] )</sch:assert>
+      <sch:assert id='a_SP074.2' diagnostics='errorCode.SP074.2 transactional.SP074.2 transactional.en.SP074.2 ' test='. = sum(../../ct:AVECVGECsurrendered/ct:Step2RestrictionSurrendered)'>[P205] is valid only if this equals [P215]</sch:assert>
+      <sch:assert id='a_SP074.3' diagnostics='errorCode.SP074.3 transactional.SP074.3 transactional.en.SP074.3 ' test='../../ct:DetailsOfAVECVGECsurrendered'>[SP085] should be present if [P205] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECcarriedForward/ct:TotalCarriedForwardToNextAP'>
+      <sch:assert id='a_SP075.0' diagnostics='errorCode.SP075.0 transactional.SP075.0 transactional.en.SP075.0 ' test='(math:abs((.) - ((sum(../ct:PreStep1Restriction) + ../ct:Step2Restriction - sum(../ct:SurrenderedToOtherGroupCompany)))) &lt; 0.001)'>[P210] is valid only if this equals [P195] plus [P200] minus [P205]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECcarriedForward'>
+      <sch:assert id='a_SP071.0' diagnostics='errorCode.SP071.0 transactional.SP071.0 transactional.en.SP071.0 ' test='../ct:PreStep1Restriction or ../ct:Step2'>If [SP071] is present the following should be true: [SP035] is present or [SP051] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECsurrendered/ct:Step2RestrictionSurrendered'>
+      <sch:assert id='a_SP077.0' diagnostics='errorCode.SP077.0 transactional.SP077.0 transactional.en.SP077.0 ' test='../../ct:AVECVGECcarriedForward/ct:SurrenderedToOtherGroupCompany'>[P205] should be present if [P215] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECsurrendered/ct:Step4CreditSurrenderedToGroupMember'>
+      <sch:assert id='a_SP078.0' diagnostics='errorCode.SP078.0 transactional.SP078.0 transactional.en.SP078.0 ' test='../../ct:Step4/ct:CreditSurrenderedToGroupMember'>[P160] should be present if [P220] is present</sch:assert>
+      <sch:assert id='a_SP078.1' diagnostics='errorCode.SP078.1 transactional.SP078.1 transactional.en.SP078.1 ' test='. = sum(../../ct:Step4/ct:CreditSurrenderedToGroupMember)'>[P220] is valid only if this equals [P160]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECsurrendered/ct:TotalSurrendered'>
+      <sch:assert id='a_SP079.0' diagnostics='errorCode.SP079.0 transactional.SP079.0 transactional.en.SP079.0 ' test='(math:abs((.) - ((sum(../ct:Step2RestrictionSurrendered) + sum(../ct:Step4CreditSurrenderedToGroupMember)))) &lt; 0.001)'>[P225] is valid only if this equals ( [P215] plus [P220] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:AVECVGECsurrendered'>
+      <sch:assert id='a_SP076.0' diagnostics='errorCode.SP076.0 transactional.SP076.0 transactional.en.SP076.0 ' test='../ct:Step4/ct:CreditSurrenderedToGroupMember or ../ct:AVECVGECcarriedForward/ct:SurrenderedToOtherGroupCompany'>[P160] or [P205] should be present if [SP076] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECpreStep1DischargeAmount'>
+      <sch:assert id='a_SP081.0' diagnostics='errorCode.SP081.0 transactional.SP081.0 transactional.en.SP081.0 ' test='../../ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardAndSurrenderedAVECVGEC'>[P60] should be present if [P230] is present</sch:assert>
+      <sch:assert id='a_SP081.1' diagnostics='errorCode.SP081.1 transactional.SP081.1 transactional.en.SP081.1 ' test='. = sum(../../ct:PreStep1Restriction/ct:AmountOfStep2BroughtForwardAndSurrenderedAVECVGEC)'>[P230] is valid only if this equals [P60]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECstep1DischargeAmount'>
+      <sch:assert id='a_SP082.0' diagnostics='errorCode.SP082.0 transactional.SP082.0 transactional.en.SP082.0 ' test='../../ct:Step1/ct:AmountOfAVECVGECusedToDischargeCorporationTaxAtStep1'>[P115] should be present if [P235] is present</sch:assert>
+      <sch:assert id='a_SP082.1' diagnostics='errorCode.SP082.1 transactional.SP082.1 transactional.en.SP082.1 ' test='. = sum(../../ct:Step1/ct:AmountOfAVECVGECusedToDischargeCorporationTaxAtStep1)'>[P235] is valid only if this equals [P115]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:AVECVGECstep5DischargeAmountForThisAP'>
+      <sch:assert id='a_SP083.0' diagnostics='errorCode.SP083.0 transactional.SP083.0 transactional.en.SP083.0 ' test='../../ct:Step5/ct:AmountUsedToDischargeOtherCompanyLiabilityOnThisCorporationTaxSelfAssessment'>[P170] should be present if [P240] is present</sch:assert>
+      <sch:assert id='a_SP083.1' diagnostics='errorCode.SP083.1 transactional.SP083.1 transactional.en.SP083.1 ' test='. = sum(../../ct:Step5/ct:AmountUsedToDischargeOtherCompanyLiabilityOnThisCorporationTaxSelfAssessment)'>[P240] is valid only if this equals [P170]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:Total'>
+      <sch:assert id='a_SP084.0' diagnostics='errorCode.SP084.0 transactional.SP084.0 transactional.en.SP084.0 ' test='../../../ct:TaxReconciliation/ct:AVECandVGEC'>[541] should be present if [P245] is present</sch:assert>
+      <sch:assert id='a_SP084.1' diagnostics='errorCode.SP084.1 transactional.SP084.1 transactional.en.SP084.1 ' test='(math:abs((.) - ((sum(../ct:AVECVGECpreStep1DischargeAmount) + sum(../ct:AVECVGECstep1DischargeAmount) + sum(../ct:AVECVGECstep5DischargeAmountForThisAP)))) &lt; 0.001)'>[P245] is valid only if this equals ( The sum of [P230], [P235], and [P240] )</sch:assert>
+      <sch:assert id='a_SP084.2' diagnostics='errorCode.SP084.2 transactional.SP084.2 transactional.en.SP084.2 ' test='. = sum(../../../ct:TaxReconciliation/ct:AVECandVGEC)'>[P245] is valid only if this equals [541]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:DetailsOfAVECVGECsurrendered/ct:DetailsOfSurrender/ct:AccountingPeriod'>
+      <sch:assert id='a_SP089.0' diagnostics='errorCode.SP089.0 transactional.SP089.0 transactional.en.SP089.0 ' test='(round(date:seconds(normalize-space(ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))'>The 'From' date of [P250C] should be on or before [35]</sch:assert>
+      <sch:assert id='a_SP089.1' diagnostics='errorCode.SP089.1 transactional.SP089.1 transactional.en.SP089.1 ' test="translate(date:add(normalize-space(string(ct:To)),normalize-space('-P12M')),'-','') &lt; translate(ct:From,'-','')">The period covered by [P250C] should not be longer than 12 months</sch:assert>
+      <sch:assert id='a_SP089.2' diagnostics='errorCode.SP089.2 transactional.SP089.2 transactional.en.SP089.2 ' test='not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(ct:From)) div 86400)))'>The 'To' date of [P250C] should not be before the 'From' date</sch:assert>
+      <sch:assert id='a_SP089.3' diagnostics='errorCode.SP089.3 transactional.SP089.3 transactional.en.SP089.3 ' test='not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))'>The 'To' date of [P250C] should be on or after [30]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:DetailsOfAVECVGECsurrendered/ct:Total'>
+      <sch:assert id='a_SP091.0' diagnostics='errorCode.SP091.0 transactional.SP091.0 transactional.en.SP091.0 ' test='. = sum(../../ct:AVECVGECsurrendered/ct:TotalSurrendered)'>[P255] is valid only if this equals [P225]</sch:assert>
+      <sch:assert id='a_SP091.1' diagnostics='errorCode.SP091.1 transactional.SP091.1 transactional.en.SP091.1 ' test='(math:abs((.) - (sum(../ct:DetailsOfSurrender/ct:Amount))) &lt; 0.001)'>[P255] must equal the sum of all iterations of [P250D]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:DetailsOfAVECVGECsurrendered'>
+      <sch:assert id='a_SP085.0' diagnostics='errorCode.SP085.0 transactional.SP085.0 transactional.en.SP085.0 ' test='../ct:AVECVGECcarriedForward/ct:SurrenderedToOtherGroupCompany or ../ct:Step4/ct:CreditSurrenderedToGroupMember'>If [SP085] is present the following should be true: [P205] is present or [P160] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalCoreExpenditure'>
+      <sch:assert id='a_SP119.0' diagnostics='errorCode.SP119.0 transactional.SP119.0 transactional.en.SP119.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:CoreExpenditure) + sum(../../ct:HighEndTV/ct:CoreExpenditure) + sum(../../ct:ChildrensTV/ct:CoreExpenditure) + sum(../../ct:Animation/ct:CoreExpenditure) + sum(../../ct:VideoGames/ct:CoreExpenditure)))) &lt; 0.001)'>[P285A] is valid only if this equals ( The sum of [P260A], [P265A], [P270A], [P275A], and [P280A] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalAdditionalDeduction'>
+      <sch:assert id='a_SP120.0' diagnostics='errorCode.SP120.0 transactional.SP120.0 transactional.en.SP120.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:AdditionalDeduction) + sum(../../ct:HighEndTV/ct:AdditionalDeduction) + sum(../../ct:ChildrensTV/ct:AdditionalDeduction) + sum(../../ct:Animation/ct:AdditionalDeduction) + sum(../../ct:VideoGames/ct:AdditionalDeduction)))) &lt; 0.001)'>[P285B] is valid only if this equals ( The sum of [P260B], [P265B], [P270B], [P275B], and [P280B] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalLossesSurrenderedForTaxCredit'>
+      <sch:assert id='a_SP121.0' diagnostics='errorCode.SP121.0 transactional.SP121.0 transactional.en.SP121.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:HighEndTV/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:ChildrensTV/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:Animation/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:VideoGames/ct:LossesSurrenderedForTaxCredit)))) &lt; 0.001)'>[P285C] is valid only if this equals ( The sum of [P260C], [P265C], [P270C], [P275C], and [P280C] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalTaxCreditClaimed'>
+      <sch:assert id='a_SP122.0' diagnostics='errorCode.SP122.0 transactional.SP122.0 transactional.en.SP122.0 ' test='(math:abs((.) - ((sum(../../ct:Film/ct:TaxCreditClaimed) + sum(../../ct:HighEndTV/ct:TaxCreditClaimed) + sum(../../ct:ChildrensTV/ct:TaxCreditClaimed) + sum(../../ct:Animation/ct:TaxCreditClaimed) + sum(../../ct:VideoGames/ct:TaxCreditClaimed)))) &lt; 0.001)'>[P285D] is valid only if this equals ( The sum of [P260D], [P265D], [P270D], [P275D], and [P280D] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief'>
+      <sch:assert id='a_SP092.0' diagnostics='errorCode.SP092.0 transactional.SP092.0 transactional.en.SP092.0 ' test='ct:Film or ct:HighEndTV or ct:ChildrensTV or ct:Animation or ct:VideoGames'>If [SP092] is present the following should be true: [P260] is present or [P265] is present or [P270] is present or [P275] is present or [P280] is present</sch:assert>
+      <sch:assert id='a_SP092.1' diagnostics='errorCode.SP092.1 transactional.SP092.1 transactional.en.SP092.1 ' test='../ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief'>[SP144] should be present if [SP092] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalCoreExpenditure'>
+      <sch:assert id='a_SP140.0' diagnostics='errorCode.SP140.0 transactional.SP140.0 transactional.en.SP140.0 ' test='(math:abs((.) - ((sum(../../ct:Theatre/ct:CoreExpenditure) + sum(../../ct:Orchestra/ct:CoreExpenditure) + sum(../../ct:MuseumGalleryExhibition/ct:CoreExpenditure)))) &lt; 0.001)'>[P305A] is valid only if this equals ( The sum of [P290A], [P295A], and [P300A] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalAdditionalDeduction'>
+      <sch:assert id='a_SP141.0' diagnostics='errorCode.SP141.0 transactional.SP141.0 transactional.en.SP141.0 ' test='(math:abs((.) - ((sum(../../ct:Theatre/ct:AdditionalDeduction) + sum(../../ct:Orchestra/ct:AdditionalDeduction) + sum(../../ct:MuseumGalleryExhibition/ct:AdditionalDeduction)))) &lt; 0.001)'>[P305B] is valid only if this equals ( The sum of [P290B], [P295B], and [P300B] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalLossesSurrenderedForTaxCredit'>
+      <sch:assert id='a_SP142.0' diagnostics='errorCode.SP142.0 transactional.SP142.0 transactional.en.SP142.0 ' test='(math:abs((.) - ((sum(../../ct:Theatre/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:Orchestra/ct:LossesSurrenderedForTaxCredit) + sum(../../ct:MuseumGalleryExhibition/ct:LossesSurrenderedForTaxCredit)))) &lt; 0.001)'>[P305C] is valid only if this equals ( The sum of [P290C], [P295C], and [P300C] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalTaxCreditClaimed'>
+      <sch:assert id='a_SP143.0' diagnostics='errorCode.SP143.0 transactional.SP143.0 transactional.en.SP143.0 ' test='(math:abs((.) - ((sum(../../ct:Theatre/ct:TaxCreditClaimed) + sum(../../ct:Orchestra/ct:TaxCreditClaimed) + sum(../../ct:MuseumGalleryExhibition/ct:TaxCreditClaimed)))) &lt; 0.001)'>[P305D] is valid only if this equals ( The sum of [P290D], [P295D], and [P300D] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefs'>
+      <sch:assert id='a_SP123.0' diagnostics='errorCode.SP123.0 transactional.SP123.0 transactional.en.SP123.0 ' test='ct:Theatre or ct:Orchestra or ct:MuseumGalleryExhibition'>If [SP123] is present at least one of [P290], [P295], [P300] should be present</sch:assert>
+      <sch:assert id='a_SP123.1' diagnostics='errorCode.SP123.1 transactional.SP123.1 transactional.en.SP123.1 ' test='../ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief'>[SP144] should be present if [SP123] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:TotalCoreExpenditureForThisAP'>
+      <sch:assert id='a_SP145.0' diagnostics='errorCode.SP145.0 transactional.SP145.0 transactional.en.SP145.0 ' test='../../../ct:EnhancedExpenditure/ct:CreativesCoreExpenditure'>[663] should be present if [P310] is present</sch:assert>
+      <sch:assert id='a_SP145.1' diagnostics='errorCode.SP145.1 transactional.SP145.1 transactional.en.SP145.1 ' test='(math:abs((.) - ((sum(../../ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalCoreExpenditure) + sum(../../ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalCoreExpenditure)))) &lt; 0.001)'>[P310] is valid only if this equals ( [P285A] plus [P305A] )</sch:assert>
+      <sch:assert id='a_SP145.2' diagnostics='errorCode.SP145.2 transactional.SP145.2 transactional.en.SP145.2 ' test='. = sum(../../../ct:EnhancedExpenditure/ct:CreativesCoreExpenditure)'>[P310] is valid only if this equals [663]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:TotalAdditionalDeductionForThisAP'>
+      <sch:assert id='a_SP146.0' diagnostics='errorCode.SP146.0 transactional.SP146.0 transactional.en.SP146.0 ' test='../../../ct:EnhancedExpenditure/ct:CreativeEnhancedExpenditure'>[665] should be present if [P315] is present</sch:assert>
+      <sch:assert id='a_SP146.1' diagnostics='errorCode.SP146.1 transactional.SP146.1 transactional.en.SP146.1 ' test='(math:abs((.) - ((sum(../../ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalAdditionalDeduction) + sum(../../ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalAdditionalDeduction)))) &lt; 0.001)'>[P315] is valid only if this equals ( [P285B] plus [P305B] )</sch:assert>
+      <sch:assert id='a_SP146.2' diagnostics='errorCode.SP146.2 transactional.SP146.2 transactional.en.SP146.2 ' test='. = sum(../../../ct:EnhancedExpenditure/ct:CreativeEnhancedExpenditure)'>[P315] is valid only if this equals [665]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:TotalTaxCreditClaimForThisAP'>
+      <sch:assert id='a_SP147.0' diagnostics='errorCode.SP147.0 transactional.SP147.0 transactional.en.SP147.0 ' test='(math:abs((.) - ((sum(../../ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief/ct:TotalAudioVisualAndVideoGames/ct:TotalTaxCreditClaimed) + sum(../../ct:CulturalReliefs/ct:TotalCulturalReliefs/ct:TotalTaxCreditClaimed)))) &lt; 0.001)'>[P320] is valid only if this equals ( [P285D] plus [P305D] )</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:PayableTaxCreditSetOffAgainstOtherLiabilitiesOnThisReturn'>
+      <sch:assert id='a_SP148.0' diagnostics='errorCode.SP148.0 transactional.SP148.0 transactional.en.SP148.0 ' test='../../../ct:TaxReconciliation/ct:CreativeCredit'>[540] should be present if [P325] is present</sch:assert>
+      <sch:assert id='a_SP148.1' diagnostics='errorCode.SP148.1 transactional.SP148.1 transactional.en.SP148.1 ' test='. &lt;= ../ct:TotalTaxCreditClaimForThisAP'>[P325] is valid only if this does not exceed [P320]</sch:assert>
+      <sch:assert id='a_SP148.2' diagnostics='errorCode.SP148.2 transactional.SP148.2 transactional.en.SP148.2 ' test='. = sum(../../../ct:TaxReconciliation/ct:CreativeCredit)'>[P325] is valid only if this equals [540]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:BalancePayableTaxCredit'>
+      <sch:assert id='a_SP149.0' diagnostics='errorCode.SP149.0 transactional.SP149.0 transactional.en.SP149.0 ' test='../../../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:CreativeCredit'>[885] should be present if [P330] is present</sch:assert>
+      <sch:assert id='a_SP149.1' diagnostics='errorCode.SP149.1 transactional.SP149.1 transactional.en.SP149.1 ' test='(math:abs((.) - ((../ct:TotalTaxCreditClaimForThisAP - ../ct:PayableTaxCreditSetOffAgainstOtherLiabilitiesOnThisReturn))) &lt; 0.001)'>[P330] is valid only if this equals ( [P320] minus [P325] )</sch:assert>
+      <sch:assert id='a_SP149.2' diagnostics='errorCode.SP149.2 transactional.SP149.2 transactional.en.SP149.2 ' test='. = sum(../../../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:CreativeCredit)'>[P330] is valid only if this equals [885]</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries/ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief'>
+      <sch:assert id='a_SP144.0' diagnostics='errorCode.SP144.0 transactional.SP144.0 transactional.en.SP144.0 ' test='../ct:FilmHighEndTVchildrensTVanimationAndVideoGamesTaxRelief or ../ct:CulturalReliefs'>If [SP144] is present the following should be true: [SP092] is present or [SP123] is present</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
+    <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CreativeIndustries'>
+      <sch:assert id='a_CT600P.1' diagnostics='errorCode.CT600P.1 transactional.CT600P.1 transactional.en.CT600P.1 ' test='ct:PreStep1Restriction or ct:Step1 or ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief'>At least one of [SP035], [SP041] or [SP144] should be present</sch:assert>
+      <sch:assert id='a_CT600P.2' diagnostics='errorCode.CT600P.2 transactional.CT600P.2 transactional.en.CT600P.2 ' test='not(../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:PayableAVECandVGEC) or ct:Step6/ct:PayableAVECandVGEC'>[P190] should be present if [886] is present</sch:assert>
+      <sch:assert id='a_CT600P.3' diagnostics='errorCode.CT600P.3 transactional.CT600P.3 transactional.en.CT600P.3 ' test='not(../ct:EnhancedExpenditure/ct:CreativesCoreExpenditure) or ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:TotalCoreExpenditureForThisAP'>[P310] should be present if [663] is present</sch:assert>
+      <sch:assert id='a_CT600P.4' diagnostics='errorCode.CT600P.4 transactional.CT600P.4 transactional.en.CT600P.4 ' test='not((((sum(ct:Step1/ct:TotalAVECandVGECforTheAccountingPeriod) - sum(ct:Step1/ct:AmountOfAVECVGECusedToDischargeCorporationTaxAtStep1))) - (0) &gt;= 0.001)) or ct:Step2'>[SP051] should be present if ( [P95] minus [P115] ) exceeds 0</sch:assert>
+      <sch:assert id='a_CT600P.5' diagnostics='errorCode.CT600P.5 transactional.CT600P.5 transactional.en.CT600P.5 ' test='not((((sum(ct:Step2/ct:Step1BalanceCarriedForwardToStep2) - sum(ct:Step2/ct:Step2RestrictionCarriedForwardToNextAP))) - (0) &gt;= 0.001)) or ct:Step3'>[SP057] should be present if ( [P120] minus [P140] ) exceeds 0</sch:assert>
+      <sch:assert id='a_CT600P.6' diagnostics='errorCode.CT600P.6 transactional.CT600P.6 transactional.en.CT600P.6 ' test='not((((sum(ct:Step3/ct:Step2BalanceCarriedForwardToStep3) - sum(ct:Step3/ct:AmountUsedToDischargeCorporationTaxLiabilityOnAnotherAP))) - (0) &gt;= 0.001)) or ct:Step4'>[SP060] should be present if ( [P145] minus [P150] ) exceeds 0</sch:assert>
+      <sch:assert id='a_CT600P.7' diagnostics='errorCode.CT600P.7 transactional.CT600P.7 transactional.en.CT600P.7 ' test='not((((sum(ct:Step4/ct:Step3BalanceCarriedForwardToStep4) - sum(ct:Step4/ct:CreditSurrenderedToGroupMember))) - (0) &gt;= 0.001)) or ct:Step5'>[SP063] should be present if ( [P155] minus [P160] ) exceeds 0</sch:assert>
+      <sch:assert id='a_CT600P.8' diagnostics='errorCode.CT600P.8 transactional.CT600P.8 transactional.en.CT600P.8 ' test='not((((sum(ct:Step5/ct:Step4BalanceCarriedForwardToStep5) - sum(ct:Step5/ct:TotalUsedToDischargeOtherCompanyLiability))) - (0) &gt;= 0.001)) or ct:Step6'>[SP068] should be present if ( [P165] minus [P180] ) exceeds 0</sch:assert>
+      <sch:assert id='a_CT600P.9' diagnostics='errorCode.CT600P.9 transactional.CT600P.9 transactional.en.CT600P.9 ' test="not(../ct:EnhancedExpenditure/ct:CreativeEnhancedExpenditure and ((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))) or ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:TotalAdditionalDeductionForThisAP">[P315] should be present if [665] is present and ( [30] on or after '2024-04-01' )</sch:assert>
+      <sch:assert id='a_CT600P.10' diagnostics='errorCode.CT600P.10 transactional.CT600P.10 transactional.en.CT600P.10 ' test="not(../ct:TaxReconciliation/ct:CreativeCredit and ((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))) or ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:PayableTaxCreditSetOffAgainstOtherLiabilitiesOnThisReturn">[P325] should be present if [540] is present and ( [30] on or after '2024-04-01' )</sch:assert>
+      <sch:assert id='a_CT600P.11' diagnostics='errorCode.CT600P.11 transactional.CT600P.11 transactional.en.CT600P.11 ' test="not(../ct:OverpaymentsAndRepayments/ct:RepaymentsForThePeriodCoveredByThisReturn/ct:CreativeCredit and ((round(date:seconds(normalize-space('2024-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))) or ct:CulturalReliefsAndFilmHighEndTVchildrensTVanimationAndVideoGameTaxRelief/ct:BalancePayableTaxCredit">[P330] should be present if [885] is present and ( [30] on or after '2024-04-01' )</sch:assert>
+      <sch:assert id='a_CT600P.12' diagnostics='errorCode.CT600P.12 transactional.CT600P.12 transactional.en.CT600P.12 ' test='not(../ct:TaxReconciliation/ct:AVECandVGEC) or ct:TotalCreditsToDischargeAgainstLiabilitiesInThisCompanyTaxReturn/ct:Total'>[P245] should be present if [541] is present</sch:assert>
+      <sch:assert id='a_N123.0' diagnostics='errorCode.N123.0 transactional.N123.0 transactional.en.N123.0 ' test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600P = 'yes'">[96] should equal 'yes' if [N123] is present.</sch:assert>
+    </sch:rule>
+  </sch:pattern>
+  <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:Attachment/@Format'>
       <sch:assert id='a_FORMAT.0' diagnostics='errorCode.FORMAT.0 transactional.FORMAT.0 transactional.en.FORMAT.0 ' test="not(. = 'esef') or ((../@Type = 'group accounts'))">If [FORMAT] equals 'esef' then [TYPE2] must equal 'group accounts'</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
     <sch:diagnostic id='transactional.N116.0'>Supplementary form CT600M must be present if Box 143 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N116.0' xml:lang='en'>Supplementary form CT600M must be present if Box 143 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.N119.0'>9218</sch:diagnostic>
     <sch:diagnostic id='transactional.N119.0'>Supplementary form CT600N must be present if Box 144 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N119.0' xml:lang='en'>Supplementary form CT600N must be present if Box 144 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.N121.0'>9872</sch:diagnostic>
+    <sch:diagnostic id='transactional.N121.0'>Supplementary form CT600P must be present if Box 96 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N121.0' xml:lang='en'>Supplementary form CT600P must be present if Box 96 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.N041.1'>9140</sch:diagnostic>
     <sch:diagnostic id='transactional.N041.1'>If Box F45 is completed then Box 450 must be greater than or equal to that entry</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N041.1' xml:lang='en'>If Box F45 is completed then Box 450 must be greater than or equal to that entry</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N041.1' xml:lang='cy'>Os yw Blwch F45 wedi ei gwblhau yna mae’n rhaid i Flwch 450 fod yn fwy na neu'n hafal i'r cofnod hwnnw</sch:diagnostic>
     <sch:diagnostic id='errorCode.N002.10'>9144</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.F213.2'>Box 329 must not be completed if the type of company is 3 (Company in liquidation)</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F213.2' xml:lang='en'>Box 329 must not be completed if the type of company is 3 (Company in liquidation)</sch:diagnostic>
     <sch:diagnostic id='errorCode.F213.3'>9416</sch:diagnostic>
     <sch:diagnostic id='transactional.F213.3'>Box 329 must not be completed if the type of company is 9 (Real Estate Investment Trust C - residual company)</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F213.3' xml:lang='en'>Box 329 must not be completed if the type of company is 9 (Real Estate Investment Trust C - residual company)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F213.4'>9873</sch:diagnostic>
+    <sch:diagnostic id='transactional.F213.4'>Box 329 must not be completed if the type of company in Box 4 is 10 (Real Estate Investment Trust C - tax-exempt company)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F213.4' xml:lang='en'>Box 329 must not be completed if the type of company in Box 4 is 10 (Real Estate Investment Trust C - tax-exempt company)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F213.5'>9874</sch:diagnostic>
+    <sch:diagnostic id='transactional.F213.5'>Box 329 must not be completed if the type of company in Box 4 is 11 (Non-UK resident company)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F213.5' xml:lang='en'>Box 329 must not be completed if the type of company in Box 4 is 11 (Non-UK resident company)</sch:diagnostic>
     <sch:diagnostic id='errorCode.F032.1'>9195</sch:diagnostic>
     <sch:diagnostic id='transactional.F032.1'>Box 330 must equal the equivalent financial year of the return period From date in Box 30</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F032.1' xml:lang='en'>Box 330 must equal the equivalent financial year of the return period From date in Box 30</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F032.1' xml:lang='cy'>Mae’n rhaid i Flwch 330 fod yn hafal i’r flwyddyn ariannol gyfwerth o ddyddiad O cyfnod y ffurflen dreth ym Mlwch 30</sch:diagnostic>
     <sch:diagnostic id='errorCode.F032.3'>9197</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.F034.1' xml:lang='cy'>Os yw'r math o gwmni yn 1 (Ymddiriedolaeth unedol neu gwmnïau bpuddsoddi enagored), yna mae'n rhaid defnyddio [CYFRADD CYFWERTH ISEL O CT] </sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.2'>9203</sch:diagnostic>
     <sch:diagnostic id='transactional.F034.2'>If the type of company is 2 (Close investment-holding company) then the [FULL RATE OF CT] of tax must be used</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F034.2' xml:lang='en'>If the type of company is 2 (Close investment-holding company) then the [FULL RATE OF CT] of tax must be used</sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.6'>9143</sch:diagnostic>
-    <sch:diagnostic id='transactional.F034.6'>If the type of company is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F034.6' xml:lang='en'>If the type of company is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
+    <sch:diagnostic id='transactional.F034.6'>If the type of company in Box 4 is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) or 10 (Real Estate Investment Trust C – tax-exempt company) or 11 (Non-UK resident company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F034.6' xml:lang='en'>If the type of company in Box 4 is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) or 10 (Real Estate Investment Trust C – tax-exempt company) or 11 (Non-UK resident company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.7'>9145</sch:diagnostic>
     <sch:diagnostic id='transactional.F034.7'>If the type of company is 6 (Members’ club or voluntary association), 7 (Property management company) or 8 (Charity or owned by a charity) then an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F034.7' xml:lang='en'>If the type of company is 6 (Members’ club or voluntary association), 7 (Property management company) or 8 (Charity or owned by a charity) then an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used</sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.8'>9147</sch:diagnostic>
     <sch:diagnostic id='transactional.F034.8'>If the type of company is 0 (UK trading or Professional Services or CASC), 3 (Company in liquidation), 4 (Asset holding company), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust C - residual company) and the [CT RATE FOR NI TRADING PROFITS] of tax is different to all other CT rates and has been used then Box 586 must be completed</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.F041.1' xml:lang='cy'>Os yw’r math o gwmni yn 1 (Ymddiriedolaeth unedol neu gwmnïau buddsoddi penagored) mae’n rhaid defnyddio'r [CYFRADD CYFWERTH ISEL O CT] o dreth am yr ail flwyddyn ariannol </sch:diagnostic>
     <sch:diagnostic id='errorCode.F041.2'>9212</sch:diagnostic>
     <sch:diagnostic id='transactional.F041.2'>If the type of company is 2 (Close investment-holding company) then the [FULL RATE OF CT] of tax must be used for the second financial year</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F041.2' xml:lang='en'>If the type of company is 2 (Close investment-holding company) then the [FULL RATE OF CT] of tax must be used for the second financial year</sch:diagnostic>
     <sch:diagnostic id='errorCode.F041.6'>9152</sch:diagnostic>
-    <sch:diagnostic id='transactional.F041.6'>If the type of company is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F041.6' xml:lang='en'>If the type of company is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
+    <sch:diagnostic id='transactional.F041.6'>If the type of company in Box 4 is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) or 10 (Real Estate Investment Trust C – tax-exempt company) or 11 (Non-UK resident company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F041.6' xml:lang='en'>If the type of company in Box 4 is 3 (Company in liquidation) or 9 (Real Estate Investment Trust C — residual company) or 10 (Real Estate Investment Trust C – tax-exempt company) or 11 (Non-UK resident company) then an applicable tax rate from one of [FULL RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
     <sch:diagnostic id='errorCode.F041.7'>9153</sch:diagnostic>
     <sch:diagnostic id='transactional.F041.7'>If the type of company is 6 (Members’ club or voluntary association), 7 (Property management company) or 8 (Charity or owned by a charity) then an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F041.7' xml:lang='en'>If the type of company is 6 (Members’ club or voluntary association), 7 (Property management company) or 8 (Charity or owned by a charity) then an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [CT RATE FOR NI TRADING PROFITS] must be used for the second financial year</sch:diagnostic>
     <sch:diagnostic id='errorCode.F041.8'>9156</sch:diagnostic>
     <sch:diagnostic id='transactional.F041.8'>If the type of company is 0 (UK trading or Professional Services or CASC), 3 (Company in liquidation), 4 (Asset holding company),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust C - residual company) and the [CT RATE FOR NI TRADING PROFITS] of tax is different to all other CT rates and has been used for the second financial year, then Box 586 must be completed</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.N059.3' xml:lang='cy'>Os yw Blwch 550 wedi ei gwblhau yna mae’n rhaid i Flwch 560 gael ei gwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.N059.4'>9359</sch:diagnostic>
     <sch:diagnostic id='transactional.N059.4'>If Box 555 is completed then Box 560 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N059.4' xml:lang='en'>If Box 555 is completed then Box 560 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N059.4' xml:lang='cy'>Os yw Blwch 555 wedi ei gwblhau yna mae’n rhaid i Flwch 560 gael ei gwblhau</sch:diagnostic>
+    <sch:diagnostic id='errorCode.N059.5'>9875</sch:diagnostic>
+    <sch:diagnostic id='transactional.N059.5'>Box 545 must be completed if Box 541 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N059.5' xml:lang='en'>Box 545 must be completed if Box 541 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.F179a.0'>9385</sch:diagnostic>
     <sch:diagnostic id='transactional.F179a.0'>Box 530 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F179a.0' xml:lang='en'>Box 530 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='errorCode.F179a.1'>9386</sch:diagnostic>
     <sch:diagnostic id='transactional.F179a.1'>Box 530 must equal Box L210</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F179a.1' xml:lang='en'>Box 530 must equal Box L210</sch:diagnostic>
     <sch:diagnostic id='errorCode.F179b.0'>9141</sch:diagnostic>
     <sch:diagnostic id='transactional.F179b.0'>Box 535 must not be used</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F179b.0' xml:lang='en'>Box 535 must not be used</sch:diagnostic>
     <sch:diagnostic id='errorCode.F179.0'>9360</sch:diagnostic>
-    <sch:diagnostic id='transactional.F179.0'>Box 545 must equal the sum of Boxes 530, 535 and 540</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F179.0' xml:lang='en'>Box 545 must equal the sum of Boxes 530, 535 and 540</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.F179.0' xml:lang='cy'>Mae’n rhaid i Flwch 545 fod yn hafal i swm Blychau 530, 535 ac 540</sch:diagnostic>
+    <sch:diagnostic id='transactional.F179.0'>Box 545 must equal the sum of Boxes 530, 535, 540 and 541</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F179.0' xml:lang='en'>Box 545 must equal the sum of Boxes 530, 535, 540 and 541</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.F179.0' xml:lang='cy'>Mae’n rhaid i Flwch 545 fod yn hafal i swm Blychau 530, 535, 540 ac 541</sch:diagnostic>
     <sch:diagnostic id='errorCode.F184.0'>9361</sch:diagnostic>
     <sch:diagnostic id='transactional.F184.0'>Box 560 must equal the sum of 550 and 555</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F184.0' xml:lang='en'>Box 560 must equal the sum of 550 and 555</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F184.0' xml:lang='cy'>Mae’n rhaid i Flwch 560 fod yn hafal i swm 550 ac 555</sch:diagnostic>
     <sch:diagnostic id='errorCode.F814.0'>9257</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.N061.0' xml:lang='cy'>Os yw Blwch 660 wedi ei gwblhau yna mae’n rhaid i Flwch 670 gael ei gwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.N061.1'>9363</sch:diagnostic>
     <sch:diagnostic id='transactional.N061.1'>If Box 665 is completed then Box 670 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N061.1' xml:lang='en'>If Box 665 is completed then Box 670 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N061.1' xml:lang='cy'>Os yw Blwch 665 wedi ei gwblhau yna mae’n rhaid i Flwch 670 gael ei gwblhau</sch:diagnostic>
-    <sch:diagnostic id='errorCode.F204.1'>9281</sch:diagnostic>
-    <sch:diagnostic id='transactional.F204.1'>Box 650 can only be completed if at least one of the boxes 670, 675 or 680 is greater than 0 (zero).</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F204.1' xml:lang='en'>Box 650 can only be completed if at least one of the boxes 670, 675 or 680 is greater than 0 (zero).</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.F204.1' xml:lang='cy'>Gellir ond cwblhau Blwch 650 os yw o leiaf un o’r blychau 670, 675, 680 yn fwy na 0 (sero).</sch:diagnostic>
     <sch:diagnostic id='errorCode.F204.0'>9282</sch:diagnostic>
     <sch:diagnostic id='transactional.F204.0'>Box 650 must not be completed if Box 655 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F204.0' xml:lang='en'>Box 650 must not be completed if Box 655 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F204.0' xml:lang='cy'>Ni ddylid cwblhau Blwch 650 os yw Blwch 655 wedi ei gwblhau</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F216.0'>9876</sch:diagnostic>
+    <sch:diagnostic id='transactional.F216.0'>Box 653 must not be completed if the return period end date in Box 35 is on or before 31/03/2023</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F216.0' xml:lang='en'>Box 653 must not be completed if the return period end date in Box 35 is on or before 31/03/2023</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F216.1'>9877</sch:diagnostic>
+    <sch:diagnostic id='transactional.F216.1'>Box 653 can only be completed if Box 650 completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F216.1' xml:lang='en'>Box 653 can only be completed if Box 650 completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.F205.3'>9284</sch:diagnostic>
     <sch:diagnostic id='transactional.F205.3'>Box 655 must not be completed if Box 650 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F205.3' xml:lang='en'>Box 655 must not be completed if Box 650 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F205.3' xml:lang='cy'>Ni ddylid cwblhau Blwch 655 os yw Blwch 650 wedi ei gwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.F211.0'>9437</sch:diagnostic>
     <sch:diagnostic id='transactional.F211.0'>If Box 657 is completed then either Box 650 or Box 655 must be completed </sch:diagnostic>
     <sch:diagnostic id='transactional.en.F211.0' xml:lang='en'>If Box 657 is completed then either Box 650 or Box 655 must be completed </sch:diagnostic>
+    <sch:diagnostic id='errorCode.F217.0'>9878</sch:diagnostic>
+    <sch:diagnostic id='transactional.F217.0'>Box 658 can only be completed if either Box 650 or Box 655 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F217.0' xml:lang='en'>Box 658 can only be completed if either Box 650 or Box 655 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.F215.0'>9438</sch:diagnostic>
     <sch:diagnostic id='transactional.F215.0'>Box 659 must not be completed if Box 650 isn't completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F215.0' xml:lang='en'>Box 659 must not be completed if Box 650 isn't completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.F215.1'>9439</sch:diagnostic>
     <sch:diagnostic id='transactional.F215.1'>If Box L166 is completed and the return period start date in Box 30 is on or after 01/04/2023 then Box 659 must equal Box L166</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F215.1' xml:lang='en'>If Box L166 is completed and the return period start date in Box 30 is on or after 01/04/2023 then Box 659 must equal Box L166</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F215.2'>9879</sch:diagnostic>
+    <sch:diagnostic id='transactional.F215.2'>Box 659 must not be completed if Box 653 is not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F215.2' xml:lang='en'>Box 659 must not be completed if Box 653 is not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
     <sch:diagnostic id='errorCode.F181a.0'>9364</sch:diagnostic>
     <sch:diagnostic id='transactional.F181a.0'>Box 660 must only be completed if either Box 650 or Box 655 are completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F181a.0' xml:lang='en'>Box 660 must only be completed if either Box 650 or Box 655 are completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F181a.0' xml:lang='cy'>Ni ddylid cwblhau Blwch 660 os yw naill ai Blwch 650 neu Flwch 655 wedi eu cwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.F181a.1'>9440</sch:diagnostic>
-    <sch:diagnostic id='transactional.F181a.1'>Box 660 must not be completed if Box 659 not completed and the return period start date in Box 30 is on or after 01/04/2023 </sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F181a.1' xml:lang='en'>Box 660 must not be completed if Box 659 not completed and the return period start date in Box 30 is on or after 01/04/2023 </sch:diagnostic>
+    <sch:diagnostic id='transactional.F181a.1'>Box 660 must not be completed if Box 659 is not completed and the return period start date in Box 30 is on or after 01/04/2023 </sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F181a.1' xml:lang='en'>Box 660 must not be completed if Box 659 is not completed and the return period start date in Box 30 is on or after 01/04/2023 </sch:diagnostic>
+    <sch:diagnostic id='errorCode.F181a.2'>9880</sch:diagnostic>
+    <sch:diagnostic id='transactional.F181a.2'>Box 660 must not be completed if Box 653 is not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F181a.2' xml:lang='en'>Box 660 must not be completed if Box 653 is not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
     <sch:diagnostic id='errorCode.F181.0'>9365</sch:diagnostic>
     <sch:diagnostic id='transactional.F181.0'>Box 670 must equal the sum of Boxes 660 and 665</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F181.0' xml:lang='en'>Box 670 must equal the sum of Boxes 660 and 665</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F181.0' xml:lang='cy'>Mae’n rhaid i Flwch 670 fod yn hafal i swm Blychau 660 a 665</sch:diagnostic>
     <sch:diagnostic id='errorCode.F207.1'>9287</sch:diagnostic>
     <sch:diagnostic id='transactional.F207.1'>Box 675 can only be completed if Box 650 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F207.1' xml:lang='en'>Box 675 can only be completed if Box 650 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F207.1' xml:lang='cy'>Gellir ond cwblhau Blwch 675 os yw Blwch 650 wedi ei gwblhau</sch:diagnostic>
+    <sch:diagnostic id='errorCode.F207.0'>9881</sch:diagnostic>
+    <sch:diagnostic id='transactional.F207.0'>Box 675 must not be completed if the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F207.0' xml:lang='en'>Box 675 must not be completed if the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
     <sch:diagnostic id='errorCode.F206.0'>9286</sch:diagnostic>
     <sch:diagnostic id='transactional.F206.0'>Box 680 must only be completed if either Box 650 or Box 655 are completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F206.0' xml:lang='en'>Box 680 must only be completed if either Box 650 or Box 655 are completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F206.0' xml:lang='cy'>Ni ddylid cwblhau Blwch 680 os yw naill ai Blwch 650 neu Flwch 655 wedi eu cwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.F206.1'>9285</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.F235.0' xml:lang='en'>Box 748 must not be completed if the return period start date in Box 30 is on or after 1 April 2025</sch:diagnostic>
     <sch:diagnostic id='errorCode.F254.0'>9391</sch:diagnostic>
     <sch:diagnostic id='transactional.F254.0'>Box 751 must not be completed if the return period start date in Box 30 is on or after 1 April 2025</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F254.0' xml:lang='en'>Box 751 must not be completed if the return period start date in Box 30 is on or after 1 April 2025</sch:diagnostic>
     <sch:diagnostic id='errorCode.F254.1'>9392</sch:diagnostic>
-    <sch:diagnostic id='transactional.F254.1'>Boxes 751 and 752 must not be completed if the return periof end date in Box 35 is on or before 31 March 2021</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F254.1' xml:lang='en'>Boxes 751 and 752 must not be completed if the return periof end date in Box 35 is on or before 31 March 2021</sch:diagnostic>
+    <sch:diagnostic id='transactional.F254.1'>Boxes 751 and 752 must not be completed if the return period end date in Box 35 is on or before 31 March 2021</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F254.1' xml:lang='en'>Boxes 751 and 752 must not be completed if the return period end date in Box 35 is on or before 31 March 2021</sch:diagnostic>
     <sch:diagnostic id='errorCode.F818.0'>9379</sch:diagnostic>
     <sch:diagnostic id='transactional.F818.0'>Box 765 can only be completed if the return period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F818.0' xml:lang='en'>Box 765 can only be completed if the return period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
     <sch:diagnostic id='errorCode.F251.0'>9412</sch:diagnostic>
     <sch:diagnostic id='transactional.F251.0'>Box 771 can only be completed if the return period end date in Box 35 is on or after 29 October 2018</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.N070.1' xml:lang='cy'>Mae’n rhaid i Flwch 870 fod yn hafal i Flwch 520</sch:diagnostic>
     <sch:diagnostic id='errorCode.N071.0'>9393</sch:diagnostic>
     <sch:diagnostic id='transactional.N071.0'>Box 875 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N071.0' xml:lang='en'>Box 875 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N071.1'>9394</sch:diagnostic>
-    <sch:diagnostic id='transactional.N071.1'>Box 875 must not be greater than Box L180</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.N071.1' xml:lang='en'>Box 875 must not be greater than Box L180</sch:diagnostic>
+    <sch:diagnostic id='transactional.N071.1'>Box 875 must equal Box L180</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N071.1' xml:lang='en'>Box 875 must equal Box L180</sch:diagnostic>
     <sch:diagnostic id='errorCode.N199.0'>9395</sch:diagnostic>
     <sch:diagnostic id='transactional.N199.0'>Box 880 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N199.0' xml:lang='en'>Box 880 must only be completed if Box 142 equals 'yes'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N199.1'>9396</sch:diagnostic>
     <sch:diagnostic id='transactional.N199.1'>Box 880 must equal Box L125</sch:diagnostic>
@@
     <sch:diagnostic id='errorCode.N074.0'>9302</sch:diagnostic>
     <sch:diagnostic id='transactional.N074.0'>Box 895 must equal Box 580</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N074.0' xml:lang='en'>Box 895 must equal Box 580</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N074.0' xml:lang='cy'>Mae’n rhaid i Flwch 895 fod yn hafal i Flwch 580</sch:diagnostic>
     <sch:diagnostic id='errorCode.N074.1'>9413</sch:diagnostic>
-    <sch:diagnostic id='transactional.N074.1'>Box 895 can only be completed if the rerurn period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.N074.1' xml:lang='en'>Box 895 can only be completed if the rerurn period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
+    <sch:diagnostic id='transactional.N074.1'>Box 895 can only be completed if the return period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N074.1' xml:lang='en'>Box 895 can only be completed if the return period start date in Box 30 is on or before 31 March 2020</sch:diagnostic>
     <sch:diagnostic id='errorCode.N078.1'>9303</sch:diagnostic>
     <sch:diagnostic id='transactional.N078.1'>You must attach the Joint Notice if Box 905 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N078.1' xml:lang='en'>You must attach the Joint Notice if Box 905 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N078.1' xml:lang='cy'>Mae'n rhaid i chi atodi'r Hysbysiad ar y Cyd os yw Blwch 905 wedi ei gwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.N080.1'>9304</sch:diagnostic>
     <sch:diagnostic id='transactional.N080.1'>Box 915 must not be greater than Box 900</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N080.1' xml:lang='en'>Box 915 must not be greater than Box 900</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N080.1' xml:lang='cy'>Ni ddylai Blwch 915 fod yn fwy na Blwch 900</sch:diagnostic>
+    <sch:diagnostic id='errorCode.N111.0'>9882</sch:diagnostic>
+    <sch:diagnostic id='transactional.N111.0'>Box 943 must not be completed if Box 875 and Box 880 are not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N111.0' xml:lang='en'>Box 943 must not be completed if Box 875 and Box 880 are not completed and the return period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='errorCode.N087.0'>9883</sch:diagnostic>
+    <sch:diagnostic id='transactional.N087.0'>If either of Boxes 875 or 880 are completed and the return period start date in Box 30 is on or after 01/04/2024 then the section 'Payments to a person other than the company' can only be completed if Box 943 completed. </sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N087.0' xml:lang='en'>If either of Boxes 875 or 880 are completed and the return period start date in Box 30 is on or after 01/04/2024 then the section 'Payments to a person other than the company' can only be completed if Box 943 completed. </sch:diagnostic>
     <sch:diagnostic id='errorCode.N095.0'>9305</sch:diagnostic>
     <sch:diagnostic id='transactional.N095.0'>Supplementary form CT600A is present so Box 95 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N095.0' xml:lang='en'>Supplementary form CT600A is present so Box 95 must be completed</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N095.0' xml:lang='cy'>Mae ffurflen atodol CT600A yn bresennol felly mae'n rhaid i Flwch 95 gael ei gwblhau</sch:diagnostic>
     <sch:diagnostic id='errorCode.LOAN.0'>9400</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.cy.SA018.0' xml:lang='cy'>Mae'n rhaid i'r ‘Dyddiad ad-daliad, rhyddhad neu ddiddymu’ ym Mlwch A25D fod yn llai na naw mis ac un diwrnod ar ôl dyddiad I y cyfnod ym Mlwch 35</sch:diagnostic>
     <sch:diagnostic id='errorCode.SA018.1'>9429</sch:diagnostic>
     <sch:diagnostic id='transactional.SA018.1'>The 'Date of repayment, release or write-off' in Box A25D must be after the period To date in Box 35.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SA018.1' xml:lang='en'>The 'Date of repayment, release or write-off' in Box A25D must be after the period To date in Box 35.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.SA018.1' xml:lang='cy'>Mae'n rhaid i'r ‘Dyddiad ad-daliad, rhyddhad neu ddiddymu’ ym Mlwch A25D fod ar ôl dyddiad I y cyfnod ym Mlwch 35</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SA018.2'>9884</sch:diagnostic>
+    <sch:diagnostic id='transactional.SA018.2'>The 'Date of repayment, release or write-off' in Box A25D must not be later than today.</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SA018.2' xml:lang='en'>The 'Date of repayment, release or write-off' in Box A25D must not be later than today.</sch:diagnostic>
     <sch:diagnostic id='errorCode.SA039.0'>9407</sch:diagnostic>
     <sch:diagnostic id='transactional.SA039.0'>Box A30 must equal the sum of all 'Amounts repaid/return repayments made' in Boxes A25B</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SA039.0' xml:lang='en'>Box A30 must equal the sum of all 'Amounts repaid/return repayments made' in Boxes A25B</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.SA039.0' xml:lang='cy'>Mae’n rhaid i Flwch A30 fod yn hafal i swm yr holl symiau ‘Swm a ad-dalwyd/ad-daliadau ffurflen dreth a wnaed’ ym Mlychau A25B</sch:diagnostic>
     <sch:diagnostic id='errorCode.SA040.0'>9408</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.SL010.3' xml:lang='en'>RDEC carried forward section on supplementary form CT600L must be completed if Step 2 section on the same form is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL011.0'>9737</sch:diagnostic>
     <sch:diagnostic id='transactional.SL011.0'>Box L50 must equal Box L25 minus Box L45</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL011.0' xml:lang='en'>Box L50 must equal Box L25 minus Box L45</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL012.0'>9738</sch:diagnostic>
-    <sch:diagnostic id='transactional.SL012.0'>Box L55 must not be less than Box L15 multiplied by the lowest tax rate of [FULL RATE OF CT], [FULL RF RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE] or [CT RATE FOR NI TRADING PROFITS] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SL012.0' xml:lang='en'>Box L55 must not be less than Box L15 multiplied by the lowest tax rate of [FULL RATE OF CT], [FULL RF RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE] or [CT RATE FOR NI TRADING PROFITS] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='transactional.SL012.0'>Box L55 must not be less than Box L15 multiplied by the lowest tax rate of [FULL RATE OF CT], [FULL RF RATE OF CT], [SMALL CO RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE] or [CT RATE FOR NI TRADING PROFITS] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SL012.0' xml:lang='en'>Box L55 must not be less than Box L15 multiplied by the lowest tax rate of [FULL RATE OF CT], [FULL RF RATE OF CT], [SMALL CO RATE OF CT], [RF SMALL CO RATE OF CT], [EQUIV. LOW CT RATE] or [CT RATE FOR NI TRADING PROFITS] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL012.1'>9739</sch:diagnostic>
     <sch:diagnostic id='transactional.SL012.1'>Box L60 must be completed if Box L55 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL012.1' xml:lang='en'>Box L60 must be completed if Box L55 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL013.0'>9740</sch:diagnostic>
     <sch:diagnostic id='transactional.SL013.0'>Box L60 must equal Box L15 minus Box L55</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.SL042.3'>Box L168A must be completed if Box L168 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL042.3' xml:lang='en'>Box L168A must be completed if Box L168 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL042.4'>9637</sch:diagnostic>
     <sch:diagnostic id='transactional.SL042.4'>Box L169A must be completed if Box L169 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL042.4' xml:lang='en'>Box L169A must be completed if Box L169 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SL042.2'>9885</sch:diagnostic>
+    <sch:diagnostic id='transactional.SL042.2'>The section 'Small and medium-sized enterprise (SME) R&amp;D and enhanced support for R&amp;D intensive SMEs' must not be completed if Box 653 is not completed and  the period start date in Box 30 is on or after '01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SL042.2' xml:lang='en'>The section 'Small and medium-sized enterprise (SME) R&amp;D and enhanced support for R&amp;D intensive SMEs' must not be completed if Box 653 is not completed and  the period start date in Box 30 is on or after '01/04/2024</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL064.0'>9639</sch:diagnostic>
     <sch:diagnostic id='transactional.SL064.0'>Box L167A must not be completed if Box L167 is not completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL064.0' xml:lang='en'>Box L167A must not be completed if Box L167 is not completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL064.1'>9640</sch:diagnostic>
     <sch:diagnostic id='transactional.SL064.1'>The entry in Box L167A must not be greater than Box L166 multiplied by 0.15</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.SL045.0'>Box L180 can only be completed if Box L170 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL045.0' xml:lang='en'>Box L180 can only be completed if Box L170 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL045.1'>9786</sch:diagnostic>
     <sch:diagnostic id='transactional.SL045.1'>Box L180 must equal Box L170 minus Box L175</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL045.1' xml:lang='en'>Box L180 must equal Box L170 minus Box L175</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SL046.0'>9886</sch:diagnostic>
+    <sch:diagnostic id='transactional.SL046.0'>Box L185 must not be completed if the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SL046.0' xml:lang='en'>Box L185 must not be completed if the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SL047.0'>9887</sch:diagnostic>
+    <sch:diagnostic id='transactional.SL047.0'>Box L190 must not be completed if the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SL047.0' xml:lang='en'>Box L190 must not be completed if the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL069.0'>9643</sch:diagnostic>
     <sch:diagnostic id='transactional.SL069.0'>Box L194 must equal Box L7</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SL069.0' xml:lang='en'>Box L194 must equal Box L7</sch:diagnostic>
     <sch:diagnostic id='errorCode.SL049.0'>9787</sch:diagnostic>
     <sch:diagnostic id='transactional.SL049.0'>Box L195 must equal Box L45</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.SN001.8' xml:lang='en'>Box N65 must be completed if Box N10 is not completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN004.0'>9525</sch:diagnostic>
     <sch:diagnostic id='transactional.SN004.0'>The accounting period in Boxes N15 and N20 must not be completed if Box N10 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN004.0' xml:lang='en'>The accounting period in Boxes N15 and N20 must not be completed if Box N10 is completed</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN004.1'>9526</sch:diagnostic>
-    <sch:diagnostic id='transactional.SN004.1'>The period From date in Box N15 must be on or before the period To date in Box N20</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SN004.1' xml:lang='en'>The period From date in Box N15 must be on or before the period To date in Box N20</sch:diagnostic>
+    <sch:diagnostic id='transactional.SN004.1'>The period From date in Box N15 must be on or before the period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SN004.1' xml:lang='en'>The period From date in Box N15 must be on or before the period end date in Box 35</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN004.2'>9527</sch:diagnostic>
     <sch:diagnostic id='transactional.SN004.2'>The period covered in Boxes N15 and N20 must not be longer than 12 months</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN004.2' xml:lang='en'>The period covered in Boxes N15 and N20 must not be longer than 12 months</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN004.3'>9528</sch:diagnostic>
     <sch:diagnostic id='transactional.SN004.3'>The period To date in Box N20 must not be before the period From date in Box N15</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.SN069.0' xml:lang='en'>Either 'Copy of notices of consent attached' or 'Authorisation of claim to group relief for simplified arrangements' must be Yes in Section 3 Part 3 on supplementary page CT600N</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN070.0'>9842</sch:diagnostic>
     <sch:diagnostic id='transactional.SN070.0'>If 'Copy of notices of consent attached' is Yes in Section 3 Part 3 on supplementary page CT600N then a PDF attachment of type 'Other' must be included </sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN070.0' xml:lang='en'>If 'Copy of notices of consent attached' is Yes in Section 3 Part 3 on supplementary page CT600N then a PDF attachment of type 'Other' must be included </sch:diagnostic>
     <sch:diagnostic id='errorCode.SN076.0'>9843</sch:diagnostic>
-    <sch:diagnostic id='transactional.SN076.0'>Consent to surrender' must be present if the type of return is 'new' and Section 3 part 4 on suplementary page CT600N is present</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SN076.0' xml:lang='en'>Consent to surrender' must be present if the type of return is 'new' and Section 3 part 4 on suplementary page CT600N is present</sch:diagnostic>
+    <sch:diagnostic id='transactional.SN076.0'>Consent to surrender' must be present if the type of return is 'new' and Section 3 part 4 on supplementary page CT600N is present</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SN076.0' xml:lang='en'>Consent to surrender' must be present if the type of return is 'new' and Section 3 part 4 on supplementary page CT600N is present</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN079.0'>9844</sch:diagnostic>
     <sch:diagnostic id='transactional.SN079.0'>The  'Accounting period of claimant company' From date in Box N190B must be on or before the return period To date in Box 35</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN079.0' xml:lang='en'>The  'Accounting period of claimant company' From date in Box N190B must be on or before the return period To date in Box 35</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN079.1'>9845</sch:diagnostic>
     <sch:diagnostic id='transactional.SN079.1'>The 'Accounting period of claimant company' in Box N190B must not be no longer than 12 months</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN079.1' xml:lang='en'>The 'Accounting period of claimant company' in Box N190B must not be no longer than 12 months</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN079.2'>9846</sch:diagnostic>
     <sch:diagnostic id='transactional.SN079.2'>The 'Accounting period of claimant company' To date must not be before the From date in Box N190B</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN079.2' xml:lang='en'>The 'Accounting period of claimant company' To date must not be before the From date in Box N190B</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN079.3'>9847</sch:diagnostic>
-    <sch:diagnostic id='transactional.SN079.3'>The 'Accounting period of claimant company' To date in Box N190B must be be on or after the return period From date in Box 30</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SN079.3' xml:lang='en'>The 'Accounting period of claimant company' To date in Box N190B must be be on or after the return period From date in Box 30</sch:diagnostic>
+    <sch:diagnostic id='transactional.SN079.3'>The 'Accounting period of claimant company' To date in Box N190B must be  on or after the return period From date in Box 30</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SN079.3' xml:lang='en'>The 'Accounting period of claimant company' To date in Box N190B must be  on or after the return period From date in Box 30</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN082.0'>9848</sch:diagnostic>
     <sch:diagnostic id='transactional.SN082.0'>Box N195 must equal the sum of all 'Amount surrendered' entries in Boxes N190D</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN082.0' xml:lang='en'>Box N195 must equal the sum of all 'Amount surrendered' entries in Boxes N190D</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN084.0'>9849</sch:diagnostic>
     <sch:diagnostic id='transactional.SN084.0'>If the 'Type of Consent' section is present in Section 3 Part 4 on supplementary page CT600N, then at least one of 'Simplified arrangement is in force', 'Notice of consent completed' or 'Copy of notices of consent attached' must be Yes</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.SN106.0'>If Box N270 is greater than Box N275 then Box N280 must equal Box N270 minus Box N275 otherwise Box N280 must equal 0 (zero)</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN106.0' xml:lang='en'>If Box N270 is greater than Box N275 then Box N280 must equal Box N270 minus Box N275 otherwise Box N280 must equal 0 (zero)</sch:diagnostic>
     <sch:diagnostic id='errorCode.SN107.0'>9865</sch:diagnostic>
     <sch:diagnostic id='transactional.SN107.0'>Box 497 must be completed if box N285 is completed</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SN107.0' xml:lang='en'>Box 497 must be completed if box N285 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.1'>9001</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.1'>Supplementary form CT600P is present so at least one of 'Pre-step 1 restriction' section, 'Step 1' section or 'Cultural reliefs and film, high end TV, children's TV, animation and video game tax relief' section must be completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.1' xml:lang='en'>Supplementary form CT600P is present so at least one of 'Pre-step 1 restriction' section, 'Step 1' section or 'Cultural reliefs and film, high end TV, children's TV, animation and video game tax relief' section must be completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.2'>9002</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.2'>Box P190 must be completed if Box 886 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.2' xml:lang='en'>Box P190 must be completed if Box 886 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.3'>9003</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.3'>Box P310 must be completed if Box 663 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.3' xml:lang='en'>Box P310 must be completed if Box 663 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.4'>9004</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.4'>The Step 2 section on supplementary page CT600P must be completed if Box P95 minus Box P115 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.4' xml:lang='en'>The Step 2 section on supplementary page CT600P must be completed if Box P95 minus Box P115 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.5'>9005</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.5'>The Step 3 section on supplementary page CT600P must be completed if Box P120 minus Box P140 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.5' xml:lang='en'>The Step 3 section on supplementary page CT600P must be completed if Box P120 minus Box P140 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.6'>9006</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.6'>The Step 4 section on supplementary page CT600P must be completed if Box P145 minus Box P150 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.6' xml:lang='en'>The Step 4 section on supplementary page CT600P must be completed if Box P145 minus Box P150 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.7'>9007</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.7'>The Step 5 section on supplementary page CT600P must be completed if Box P155 minus Box P160 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.7' xml:lang='en'>The Step 5 section on supplementary page CT600P must be completed if Box P155 minus Box P160 is greater than 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.8'>9008</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.8'>The Step 6 section on supplementary page CT600P must be completed if Box P165 minus Box P180 is greater than zero</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.8' xml:lang='en'>The Step 6 section on supplementary page CT600P must be completed if Box P165 minus Box P180 is greater than zero</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.9'>9009</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.9'>Box P315 must be completed if Box 665 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.9' xml:lang='en'>Box P315 must be completed if Box 665 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.10'>9010</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.10'>Box P325 must be completed if Box 540 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.10' xml:lang='en'>Box P325 must be completed if Box 540 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.11'>9011</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.11'>Box P330 must be completed if Box 885 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.11' xml:lang='en'>Box P330 must be completed if Box 885 is completed and the period start date in Box 30 is on or after 01/04/2024</sch:diagnostic>
+    <sch:diagnostic id='errorCode.CT600P.12'>9012</sch:diagnostic>
+    <sch:diagnostic id='transactional.CT600P.12'>Box P245 must be completed if Box 541 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.CT600P.12' xml:lang='en'>Box P245 must be completed if Box 541 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.N123.0'>9013</sch:diagnostic>
+    <sch:diagnostic id='transactional.N123.0'>Box 96 must be completed if Supplementary page CT600P is present</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.N123.0' xml:lang='en'>Box 96 must be completed if Supplementary page CT600P is present</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP001.0'>9015</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP001.0'>If the 'Audio-Visual Expenditure Credit' section on supplementary page CT600P is present then Boxes P5,  P10, P15, P20 or P25 must be completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP001.0' xml:lang='en'>If the 'Audio-Visual Expenditure Credit' section on supplementary page CT600P is present then Boxes P5,  P10, P15, P20 or P25 must be completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP023.0'>9016</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP023.0'>Box P30A must equal the sum of Boxes P5A, P10A, P15A, P20A and P25A</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP023.0' xml:lang='en'>Box P30A must equal the sum of Boxes P5A, P10A, P15A, P20A and P25A</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP024.0'>9017</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP024.0'>Box P30B must equal the sum of Boxes P5B, P10B, P15B, P20B and P25B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP024.0' xml:lang='en'>Box P30B must equal the sum of Boxes P5B, P10B, P15B, P20B and P25B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP024.1'>9018</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP024.1'>Box P75 must be completed if Box P30B is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP024.1' xml:lang='en'>Box P75 must be completed if Box P30B is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP025.0'>9019</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP025.0'>Box P30C must equal the sum of Boxes P5C, P10C, P15C, P20C and P25C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP025.0' xml:lang='en'>Box P30C must equal the sum of Boxes P5C, P10C, P15C, P20C and P25C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP025.1'>9020</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP025.1'>Box P80 must be completed if Box P30C is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP025.1' xml:lang='en'>Box P80 must be completed if Box P30C is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP032.0'>9021</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP032.0'>Box P45A must equal Box P35A</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP032.0' xml:lang='en'>Box P45A must equal Box P35A</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP033.0'>9022</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP033.0'>Box P45B must equal Box P35B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP033.0' xml:lang='en'>Box P45B must equal Box P35B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP033.1'>9023</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP033.1'>Box P85 must be completed if Box P45B has been completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP033.1' xml:lang='en'>Box P85 must be completed if Box P45B has been completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP034.0'>9024</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP034.0'>Box P45C must equal Box P35C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP034.0' xml:lang='en'>Box P45C must equal Box P35C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP034.1'>9025</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP034.1'>Box P90 must be completed if Box P45C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP034.1' xml:lang='en'>Box P90 must be completed if Box P45C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP035.0'>9026</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP035.0'>The 'AVEC and VGEC carried forward' section on supplementary page CT600P must be completed if the 'Pre-step 1 restriction' section on the same supplementary page is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP035.0' xml:lang='en'>The 'AVEC and VGEC carried forward' section on supplementary page CT600P must be completed if the 'Pre-step 1 restriction' section on the same supplementary page is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP037.0'>9027</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP037.0'>If Box 530 is less than Box 475 then Box P55 must equal Box 475 minus Box 530 otherwise Box P55 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP037.0' xml:lang='en'>If Box 530 is less than Box 475 then Box P55 must equal Box 475 minus Box 530 otherwise Box P55 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP038.0'>9028</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP038.0'>Box P60 must not be greater than Box P50</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP038.0' xml:lang='en'>Box P60 must not be greater than Box P50</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP038.1'>9029</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP038.1'>Box P60 must not be greater than Box P55</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP038.1' xml:lang='en'>Box P60 must not be greater than Box P55</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP038.2'>9030</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP038.2'>Box P230 must be completed if Box P60 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP038.2' xml:lang='en'>Box P230 must be completed if Box P60 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP039.0'>9031</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP039.0'>Box P65 must equal Box P50 minus Box P60</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP039.0' xml:lang='en'>Box P65 must equal Box P50 minus Box P60</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP039.1'>9032</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP039.1'>Box P65 must equal Box P195</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP039.1' xml:lang='en'>Box P65 must equal Box P195</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP040.0'>9033</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP040.0'>Box P70 must equal Box P55 minus Box P60</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP040.0' xml:lang='en'>Box P70 must equal Box P55 minus Box P60</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP040.1'>9034</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP040.1'>Box P70 must equal Box P100</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP040.1' xml:lang='en'>Box P70 must equal Box P100</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP041.0'>9035</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP041.0'>Box P100 must be completed if Box P70 is completed or if Box 475 is greater than Box 530 and the Step 1 section on supplementary page CT600P is present</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP041.0' xml:lang='en'>Box P100 must be completed if Box P70 is completed or if Box 475 is greater than Box 530 and the Step 1 section on supplementary page CT600P is present</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP042.0'>9036</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP042.0'>Box P75 can only be completed if Box P30B is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP042.0' xml:lang='en'>Box P75 can only be completed if Box P30B is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP042.1'>9037</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP042.1'>Box P75 must equal Box P30B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP042.1' xml:lang='en'>Box P75 must equal Box P30B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP043.0'>9038</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP043.0'>Box P80 can only be completed if Box P30C is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP043.0' xml:lang='en'>Box P80 can only be completed if Box P30C is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP043.1'>9039</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP043.1'>Box P80 must equal Box P30C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP043.1' xml:lang='en'>Box P80 must equal Box P30C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP044.0'>9040</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP044.0'>Box P85 can only be completed if Box P45B is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP044.0' xml:lang='en'>Box P85 can only be completed if Box P45B is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP044.1'>9041</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP044.1'>Box P85 must equal Box P45B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP044.1' xml:lang='en'>Box P85 must equal Box P45B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP045.0'>9042</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP045.0'>Box P90 can only be completed if Box P45C is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP045.0' xml:lang='en'>Box P90 can only be completed if Box P45C is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP045.1'>9044</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP045.1'>Box P90 must equal Box P45C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP045.1' xml:lang='en'>Box P90 must equal Box P45C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP046.0'>9045</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP046.0'>Box P95 must equal the sum of Boxes P80 and P90</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP046.0' xml:lang='en'>Box P95 must equal the sum of Boxes P80 and P90</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP047.0'>9046</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP047.0'>If Box P70 is not completed and Box 475 is greater than or equal to Box 530, then Box P100 must equal Box 475 minus Box 530. If Box P70 is not completed and Box 475 is less than Box 530, then Box P100 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP047.0' xml:lang='en'>If Box P70 is not completed and Box 475 is greater than or equal to Box 530, then Box P100 must equal Box 475 minus Box 530. If Box P70 is not completed and Box 475 is less than Box 530, then Box P100 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP047.1'>9047</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP047.1'>Box P110 must be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP047.1' xml:lang='en'>Box P110 must be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP048.0'>9048</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP048.0'>Box P105 can only be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP048.0' xml:lang='en'>Box P105 can only be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP048.1'>9049</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP048.1'>Box P105 must not be greater than Box 515</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP048.1' xml:lang='en'>Box P105 must not be greater than Box 515</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP048.2'>9050</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP048.2'>Box P105 must not be greater than Box P100</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP048.2' xml:lang='en'>Box P105 must not be greater than Box P100</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP049.0'>9051</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP049.0'>Box P110 can only be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP049.0' xml:lang='en'>Box P110 can only be completed if Box P100 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP049.1'>9052</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP049.1'>Box P110 must equal Box P100 minus Box P105</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP049.1' xml:lang='en'>Box P110 must equal Box P100 minus Box P105</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP050.0'>9053</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP050.0'>Box P115 must equal the lesser of Boxes P95 and P110. If Box P110 is not completed then Box P115 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP050.0' xml:lang='en'>Box P115 must equal the lesser of Boxes P95 and P110. If Box P110 is not completed then Box P115 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP050.1'>9054</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP050.1'>Box P235 must be completed if Box P115 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP050.1' xml:lang='en'>Box P235 must be completed if Box P115 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP051.0'>9055</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP051.0'>The Step 2 section on supplementary page CT600P can only be completed if the Step 1 section on the same page is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP051.0' xml:lang='en'>The Step 2 section on supplementary page CT600P can only be completed if the Step 1 section on the same page is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP051.1'>9056</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP051.1'>The 'AVEC and VGEC carried forward' section on supplementary page CT600P must be completed if the Step 2 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP051.1' xml:lang='en'>The 'AVEC and VGEC carried forward' section on supplementary page CT600P must be completed if the Step 2 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP052.0'>9057</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP052.0'>Box P120 must equal Box P95 minus Box P115</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP052.0' xml:lang='en'>Box P120 must equal Box P95 minus Box P115</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP053.0'>9058</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP053.0'>Box P125 must not be less than Box P95 multiplied by [FULL RATE OF CT] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP053.0' xml:lang='en'>Box P125 must not be less than Box P95 multiplied by [FULL RATE OF CT] at either the return period start date in Box 30 or the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP054.0'>9059</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP054.0'>Box P130 must equal Box P95 minus Box P125</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP054.0' xml:lang='en'>Box P130 must equal Box P95 minus Box P125</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP055.0'>9060</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP055.0'>If Box P110 is less than P95 then Box P135 must equal Box P95 minus Box P110 otherwise Box P135 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP055.0' xml:lang='en'>If Box P110 is less than P95 then Box P135 must equal Box P95 minus Box P110 otherwise Box P135 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP056.0'>9061</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP056.0'>Box P140 must not be greater than Box P120</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP056.0' xml:lang='en'>Box P140 must not be greater than Box P120</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP056.1'>9062</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP056.1'>Box P140 must equal Box P200</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP056.1' xml:lang='en'>Box P140 must equal Box P200</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP056.2'>9063</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP056.2'>If Box P130 is less than P135 then Box P140 must equal Box P135 minus Box P130 otherwise Box P140 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP056.2' xml:lang='en'>If Box P130 is less than P135 then Box P140 must equal Box P135 minus Box P130 otherwise Box P140 must equal 0 (zero)</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP057.0'>9064</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP057.0'>The Step 3 section on supplementary page CT600P can only be completed if the Step 2 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP057.0' xml:lang='en'>The Step 3 section on supplementary page CT600P can only be completed if the Step 2 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP058.0'>9065</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP058.0'>Box P145 must equal Box P120 minus Box P140</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP058.0' xml:lang='en'>Box P145 must equal Box P120 minus Box P140</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP059.0'>9066</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP059.0'>Box P150 must not be greater than Box P145</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP059.0' xml:lang='en'>Box P150 must not be greater than Box P145</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP060.0'>9067</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP060.0'>The Step 4 section on supplementary page CT600P can only be completed if the Step 3 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP060.0' xml:lang='en'>The Step 4 section on supplementary page CT600P can only be completed if the Step 3 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP061.0'>9068</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP061.0'>Box P155 must equal Box P145 minus Box P150</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP061.0' xml:lang='en'>Box P155 must equal Box P145 minus Box P150</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP062.0'>9069</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP062.0'>Box P160 must not be greater than Box P155</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP062.0' xml:lang='en'>Box P160 must not be greater than Box P155</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP062.1'>9070</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP062.1'>Box P220 must be completed if Box P160 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP062.1' xml:lang='en'>Box P220 must be completed if Box P160 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP062.2'>9071</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP062.2'>The 'Details of AVEC and VGEC surrendered' section on supplementary page CT600P must be completed if Box P160 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP062.2' xml:lang='en'>The 'Details of AVEC and VGEC surrendered' section on supplementary page CT600P must be completed if Box P160 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP063.0'>9072</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP063.0'>The Step 5 section on supplementary page CT600P can only be completed if the Step 4 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP063.0' xml:lang='en'>The Step 5 section on supplementary page CT600P can only be completed if the Step 4 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP064.0'>9073</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP064.0'>Box P165 must equal Box P155 minus Box P160</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP064.0' xml:lang='en'>Box P165 must equal Box P155 minus Box P160</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP065.0'>9074</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP065.0'>Box P170 must not be greater than Box P165</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP065.0' xml:lang='en'>Box P170 must not be greater than Box P165</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP065.1'>9075</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP065.1'>Box P240 must be completed if Box P170 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP065.1' xml:lang='en'>Box P240 must be completed if Box P170 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP065.2'>9076</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP065.2'>Box P180 must be completed if Box P170 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP065.2' xml:lang='en'>Box P180 must be completed if Box P170 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP066.0'>9077</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP066.0'>Box P175 must not be greater than Box P165 minus Box P170</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP066.0' xml:lang='en'>Box P175 must not be greater than Box P165 minus Box P170</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP066.1'>9078</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP066.1'>Box P180 must be completed if Box P175 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP066.1' xml:lang='en'>Box P180 must be completed if Box P175 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP067.0'>9079</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP067.0'>Box P180 must equal the sum of Boxes P170 and P175</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP067.0' xml:lang='en'>Box P180 must equal the sum of Boxes P170 and P175</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP068.0'>9080</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP068.0'>The Step 6 section on supplementary page CT600P can only be completed if the Step 5 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP068.0' xml:lang='en'>The Step 6 section on supplementary page CT600P can only be completed if the Step 5 section on the same supplementary is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP069.0'>9081</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP069.0'>Box P185 must not be greater than Box P165 minus Box P180</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP069.0' xml:lang='en'>Box P185 must not be greater than Box P165 minus Box P180</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP070.0'>9082</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP070.0'>Box P190 can only be completed if Box 886 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP070.0' xml:lang='en'>Box P190 can only be completed if Box 886 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP070.1'>9083</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP070.1'>Box P190 must equal Box P165 minus the sum of Boxes P180 and P185</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP070.1' xml:lang='en'>Box P190 must equal Box P165 minus the sum of Boxes P180 and P185</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP070.2'>9084</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP070.2'>Box P190 must equal Box 886</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP070.2' xml:lang='en'>Box P190 must equal Box 886</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP071.0'>9085</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP071.0'>If the 'AVEC and VGEC carried forward' section is present on supplementary page CT600P then the 'Pre-step 1 restriction' section or the Step 2 section must be completed on the same supplementary</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP071.0' xml:lang='en'>If the 'AVEC and VGEC carried forward' section is present on supplementary page CT600P then the 'Pre-step 1 restriction' section or the Step 2 section must be completed on the same supplementary</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP072.0'>9086</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP072.0'>Box P195 must equal Box P65</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP072.0' xml:lang='en'>Box P195 must equal Box P65</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP073.0'>9087</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP073.0'>Box P200 must equal Box P140</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP073.0' xml:lang='en'>Box P200 must equal Box P140</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP074.0'>9088</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP074.0'>If Box P205 is completed then Box P215 must be completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP074.0' xml:lang='en'>If Box P205 is completed then Box P215 must be completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP074.1'>9089</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP074.1'>Box P205 must not be greater than the sum of Boxes P195 and P200</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP074.1' xml:lang='en'>Box P205 must not be greater than the sum of Boxes P195 and P200</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP074.2'>9888</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP074.2'>Box P205 must equal Box P215</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP074.2' xml:lang='en'>Box P205 must equal Box P215</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP074.3'>9889</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP074.3'>The 'Details of AVEG and VGEC surrendered' section on supplementary page CT600P must be completed if Box P205 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP074.3' xml:lang='en'>The 'Details of AVEG and VGEC surrendered' section on supplementary page CT600P must be completed if Box P205 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP075.0'>9890</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP075.0'>Box P210 must equal the sum of Boxes P195 and P210 minus Box P205</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP075.0' xml:lang='en'>Box P210 must equal the sum of Boxes P195 and P210 minus Box P205</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP076.0'>9891</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP076.0'>Boxes P160 or P205 must be completed if the 'AVEC and VGEC surrendered' section on supplementary page CT600P is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP076.0' xml:lang='en'>Boxes P160 or P205 must be completed if the 'AVEC and VGEC surrendered' section on supplementary page CT600P is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP077.0'>9892</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP077.0'>Box P205 must be completed if Box P215 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP077.0' xml:lang='en'>Box P205 must be completed if Box P215 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP078.0'>9893</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP078.0'>Box P160 must be completed if Box P220 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP078.0' xml:lang='en'>Box P160 must be completed if Box P220 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP078.1'>9894</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP078.1'>Box P220 must equal Box P160</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP078.1' xml:lang='en'>Box P220 must equal Box P160</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP079.0'>9895</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP079.0'>Box P225 must equal the sum of Boxes P215 and P220</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP079.0' xml:lang='en'>Box P225 must equal the sum of Boxes P215 and P220</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP081.0'>9896</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP081.0'>Box P60 must be completed if Box P230 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP081.0' xml:lang='en'>Box P60 must be completed if Box P230 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP081.1'>9897</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP081.1'>Box P230 must equal Box P60</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP081.1' xml:lang='en'>Box P230 must equal Box P60</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP082.0'>9898</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP082.0'>Box P115 must be completed if Box P235 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP082.0' xml:lang='en'>Box P115 must be completed if Box P235 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP082.1'>9899</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP082.1'>Box P235 must equal Box P115</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP082.1' xml:lang='en'>Box P235 must equal Box P115</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP083.0'>9938</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP083.0'>Box P170 must be completed if Box P240 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP083.0' xml:lang='en'>Box P170 must be completed if Box P240 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP083.1'>9939</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP083.1'>Box P240 must equal Box P170</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP083.1' xml:lang='en'>Box P240 must equal Box P170</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP084.0'>9940</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP084.0'>Box 541 must be completed if P245 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP084.0' xml:lang='en'>Box 541 must be completed if P245 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP084.1'>9941</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP084.1'>Box P245 must equal the sum of Boxes P230, P235 and P240</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP084.1' xml:lang='en'>Box P245 must equal the sum of Boxes P230, P235 and P240</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP084.2'>9904</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP084.2'>Box P245 must equal Box 541</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP084.2' xml:lang='en'>Box P245 must equal Box 541</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP085.0'>9905</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP085.0'>If the 'Details of AVEG and VGEC surrendered' section is present on supplementary page CT600P then Boxes P205 or P160 must be completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP085.0' xml:lang='en'>If the 'Details of AVEG and VGEC surrendered' section is present on supplementary page CT600P then Boxes P205 or P160 must be completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP089.0'>9906</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP089.0'>The claimant company 'Accounting period' start date in Box P250C must be on or before the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP089.0' xml:lang='en'>The claimant company 'Accounting period' start date in Box P250C must be on or before the return period end date in Box 35</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP089.1'>9907</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP089.1'>The claimant company 'Accounting period' in Box P250C must not be longer than 12 months</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP089.1' xml:lang='en'>The claimant company 'Accounting period' in Box P250C must not be longer than 12 months</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP089.2'>9908</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP089.2'>The  claimant company 'Accounting period' end date must not be before the start date in Box P250C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP089.2' xml:lang='en'>The  claimant company 'Accounting period' end date must not be before the start date in Box P250C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP089.3'>9909</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP089.3'>The  claimant company 'Accounting period' end date in Box P250C must be on or after the return period start date in Box 30</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP089.3' xml:lang='en'>The  claimant company 'Accounting period' end date in Box P250C must be on or after the return period start date in Box 30</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP091.0'>9910</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP091.0'>Box P255 must equal Box P225</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP091.0' xml:lang='en'>Box P255 must equal Box P225</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP091.1'>9911</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP091.1'>Box P255 must equal the sum of all 'Details of AVEC and VGEC surrendered' amount entries in Boxes P250D</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP091.1' xml:lang='en'>Box P255 must equal the sum of all 'Details of AVEC and VGEC surrendered' amount entries in Boxes P250D</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP092.0'>9912</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP092.0'>If the 'Film, high-end TV, children's TV, animation and video games tax relief' section is present on supplementary page CT600P then Boxes P260, P265, P270 or P275 must be completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP092.0' xml:lang='en'>If the 'Film, high-end TV, children's TV, animation and video games tax relief' section is present on supplementary page CT600P then Boxes P260, P265, P270 or P275 must be completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP092.1'>9913</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP092.1'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on supplementary page CT600P must be completed if the 'Film, high-end TV, children's TV, animation and video games tax relief' section is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP092.1' xml:lang='en'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on supplementary page CT600P must be completed if the 'Film, high-end TV, children's TV, animation and video games tax relief' section is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP119.0'>9914</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP119.0'>Box P285A must equal the sum of Boxes P260A, P265A, P270A, P275A, and P280A</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP119.0' xml:lang='en'>Box P285A must equal the sum of Boxes P260A, P265A, P270A, P275A, and P280A</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP120.0'>9915</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP120.0'>Box P285B must equal the sum of Boxes P260B, P265B, P270B, P275B and P280B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP120.0' xml:lang='en'>Box P285B must equal the sum of Boxes P260B, P265B, P270B, P275B and P280B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP121.0'>9916</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP121.0'>Box P285C must equal the sum of Boxes P260C, P265C, P270C, P275C, and P280C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP121.0' xml:lang='en'>Box P285C must equal the sum of Boxes P260C, P265C, P270C, P275C, and P280C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP122.0'>9917</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP122.0'>Box P285D must equal the sum of Boxes P260D, P265D, P270D, P275D, and P280D</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP122.0' xml:lang='en'>Box P285D must equal the sum of Boxes P260D, P265D, P270D, P275D, and P280D</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP123.0'>9918</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP123.0'>If the 'Cultural reliefs' section on supplementary page CT600P is present then at least one of Boxes P290, P295 or P300 must be completed </sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP123.0' xml:lang='en'>If the 'Cultural reliefs' section on supplementary page CT600P is present then at least one of Boxes P290, P295 or P300 must be completed </sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP123.1'>9919</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP123.1'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on Supplementary page CT600P must be completed if the 'Cultural reliefs' section is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP123.1' xml:lang='en'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on Supplementary page CT600P must be completed if the 'Cultural reliefs' section is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP140.0'>9920</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP140.0'>Box 305A must equal the sum of Boxes P290A, P295A and P300A</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP140.0' xml:lang='en'>Box 305A must equal the sum of Boxes P290A, P295A and P300A</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP141.0'>9921</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP141.0'>Box P305B  must equal  the sum of Boxes P290B, P295B and P300B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP141.0' xml:lang='en'>Box P305B  must equal  the sum of Boxes P290B, P295B and P300B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP142.0'>9922</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP142.0'>Box P305C must equal the sum of Boxes P290C, P295C and P300C</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP142.0' xml:lang='en'>Box P305C must equal the sum of Boxes P290C, P295C and P300C</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP143.0'>9923</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP143.0'>Box P305D must equal the sum of Boxes P290D, P295D and P300D</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP143.0' xml:lang='en'>Box P305D must equal the sum of Boxes P290D, P295D and P300D</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP144.0'>9924</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP144.0'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on supplementary page CT600P can only be completed if the 'Film, high-end TV, children's TV, animation and video games tax relief' section or the 'Cultural reliefs' section is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP144.0' xml:lang='en'>The 'Cultural reliefs and film, high-end TV, children's TV, animation and video game tax relief' section on supplementary page CT600P can only be completed if the 'Film, high-end TV, children's TV, animation and video games tax relief' section or the 'Cultural reliefs' section is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP145.0'>9925</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP145.0'>Box 663 must be completed if Box P310 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP145.0' xml:lang='en'>Box 663 must be completed if Box P310 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP145.1'>9926</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP145.1'>Box P310 must equal the sum of Boxes P285A and P305A</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP145.1' xml:lang='en'>Box P310 must equal the sum of Boxes P285A and P305A</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP145.2'>9927</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP145.2'>Box P310 must equal Box 663</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP145.2' xml:lang='en'>Box P310 must equal Box 663</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP146.0'>9928</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP146.0'>Box 665 must be completed if Box P315 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP146.0' xml:lang='en'>Box 665 must be completed if Box P315 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP146.1'>9929</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP146.1'>Box P315 must equal the sum of Boxes P285B and P305B</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP146.1' xml:lang='en'>Box P315 must equal the sum of Boxes P285B and P305B</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP146.2'>9930</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP146.2'>Box P315 must equal Box 665</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP146.2' xml:lang='en'>Box P315 must equal Box 665</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP147.0'>9931</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP147.0'>Box P320 must equal the sum of Boxes P285D and P305D</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP147.0' xml:lang='en'>Box P320 must equal the sum of Boxes P285D and P305D</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP148.0'>9932</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP148.0'>Box 540 must be completed if Box P325 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP148.0' xml:lang='en'>Box 540 must be completed if Box P325 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP148.1'>9933</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP148.1'>Box P325 must not be greater than Box P320</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP148.1' xml:lang='en'>Box P325 must not be greater than Box P320</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP148.2'>9934</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP148.2'>Box P325 must equal Box 540</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP148.2' xml:lang='en'>Box P325 must equal Box 540</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP149.0'>9935</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP149.0'>Box 885 must be completed if Box P330 is completed</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP149.0' xml:lang='en'>Box 885 must be completed if Box P330 is completed</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP149.1'>9936</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP149.1'>Box 885 must equal Box P320 minus Box P325</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP149.1' xml:lang='en'>Box 885 must equal Box P320 minus Box P325</sch:diagnostic>
+    <sch:diagnostic id='errorCode.SP149.2'>9937</sch:diagnostic>
+    <sch:diagnostic id='transactional.SP149.2'>Box P330 must equal Box 885</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SP149.2' xml:lang='en'>Box P330 must equal Box 885</sch:diagnostic>
     <sch:diagnostic id='errorCode.FORMAT.0'>9903</sch:diagnostic>
     <sch:diagnostic id='transactional.FORMAT.0'>If the attached file format equals 'esef' then the attached file type must equal 'group accounts'</sch:diagnostic>
     <sch:diagnostic id='transactional.en.FORMAT.0' xml:lang='en'>If the attached file format equals 'esef' then the attached file type must equal 'group accounts'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N107.1'>9315</sch:diagnostic>
     <sch:diagnostic id='transactional.N107.1'>If Box 90 'No accounts reason' is absent then accounts must be attached</sch:diagnostic>
